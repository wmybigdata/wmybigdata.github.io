<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>深入解读FlinkSQL1.13</title>
      <link href="/2021/08/24/%E6%B7%B1%E5%85%A5%E8%A7%A3%E8%AF%BBFlinkSQL1-13/"/>
      <url>/2021/08/24/%E6%B7%B1%E5%85%A5%E8%A7%A3%E8%AF%BBFlinkSQL1-13/</url>
      
        <content type="html"><![CDATA[<h1 id="深入解读FlinkSQL1-13"><a href="#深入解读FlinkSQL1-13" class="headerlink" title="深入解读FlinkSQL1.13"></a>深入解读FlinkSQL1.13</h1><p>参考网址：<a href="https://flink-learning.org.cn/article/detail/a8b0895d4271bf6b770927eea214612d" target="_blank" rel="noopener">https://flink-learning.org.cn/article/detail/a8b0895d4271bf6b770927eea214612d</a></p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824113303217.png" alt="Flink SQL核心功能"></p><ol><li>Flink SQL 1.13 概览</li><li>核心 feature 解读</li><li>重要改进解读</li><li>Flink SQL 1.14 未来规划</li><li>总结</li></ol><h2 id="一、Flink-SQL-1-13-概览"><a href="#一、Flink-SQL-1-13-概览" class="headerlink" title="一、Flink SQL 1.13 概览"></a>一、Flink SQL 1.13 概览</h2><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824113358728.png" alt="Flink SQL概览"></p><p>Flink 1.13 是一个社区大版本，解决的 issue 在 1000 个以上，通过上图我们可以看到，解决的问题大部分是关于 Table/SQL 模块，一共 400 多个 issue 占了总体的 37% 左右。这些 issue 主要围绕了 5 个 FLIP 展开，在本文中我们也会根据这 5 个方面进行介绍，它们分别是：</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824113444978.png" alt="Table SQL"></p><p>下面我们对这些 FLIP 进行详细解读。</p><h2 id="二、-核心-feature-解读"><a href="#二、-核心-feature-解读" class="headerlink" title="二、 核心 feature 解读"></a>二、 核心 feature 解读</h2><h3 id="1-FLIP-145：支持-Window-TVF"><a href="#1-FLIP-145：支持-Window-TVF" class="headerlink" title="1. FLIP-145：支持 Window TVF"></a>1. FLIP-145：支持 Window TVF</h3><p>社区的小伙伴应该了解，在腾讯、阿里巴巴、字节跳动等公司的内部分支已经开发了这个功能的基础版本。这次 Flink 社区也在 Flink 1.13 推出了 TVF 的相关支持和优化。下面将从 Window TVF 语法、近实时累计计算场景、 Window 性能优化、多维数据分析，来分析这个新功能。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824113601029.png" alt="Window TVF"></p><h4 id="1-1-Window-TVF-语法"><a href="#1-1-Window-TVF-语法" class="headerlink" title="1.1 Window TVF 语法"></a>1.1 Window TVF 语法</h4><p>在 1.13 版本前，window 的实现是通过一个特殊的 SqlGroupedWindowFunction：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span>   TUMBLE_START<span class="token punctuation">(</span>bidtime<span class="token punctuation">,</span>INTERVAL <span class="token string">'10'</span> MINUTE<span class="token punctuation">)</span><span class="token punctuation">,</span>  TUMBLE_END<span class="token punctuation">(</span>bidtime<span class="token punctuation">,</span>INTERVAL <span class="token string">'10'</span> MINUTE<span class="token punctuation">)</span><span class="token punctuation">,</span>  TUMBLE_ROWTIME<span class="token punctuation">(</span>bidtime<span class="token punctuation">,</span>INTERVAL <span class="token string">'10'</span> MINUTE<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token function">SUM</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token keyword">FROM</span> MyTable<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> TUMBLE<span class="token punctuation">(</span>bidtime<span class="token punctuation">,</span>INTERVAL <span class="token string">'10'</span> MINUTE<span class="token punctuation">)</span></code></pre><p>在 1.13 版本中，我们对它进行了 Table-Valued Function 的语法标准化：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> WINDOW_start<span class="token punctuation">,</span>WINDOW_end<span class="token punctuation">,</span>WINDOW_time<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span> <span class="token keyword">FROM</span> <span class="token keyword">Table</span><span class="token punctuation">(</span>TUMBLE<span class="token punctuation">(</span><span class="token keyword">Table</span> myTable<span class="token punctuation">,</span>DESCRIPTOR<span class="token punctuation">(</span>biztime<span class="token punctuation">)</span><span class="token punctuation">,</span>INTERVAL <span class="token string">'10'</span> MINUTE<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> WINDOW_start<span class="token punctuation">,</span>WINDOW_end</code></pre><p>通过对比两种语法，我们可以发现：TVF 语法更加灵活，不需要必须跟在 GROUP BY 关键字后面，同时 Window TVF 基于关系代数，使得其更加标准。在只需要划分窗口场景时，可以只用 TVF，无需用 GROUP BY 做聚合，这使得 TVF 扩展性和表达能力更强，支持自定义 TVF（例如实现 TOP-N 的 TVF）。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824113822022.png" alt="TOP-N TVF"></p><p>上图中的示例就是利用 TVF 做的滚动窗口的划分，只需要把数据划分到窗口，无需聚合；如果后续需要聚合，再进行 GROP BY 即可。同时，对于熟悉批 SQL 的用户来说，这种操作是非常自然的，我们不再需要像 1.13 版本之前那样必须要用特殊的 SqlGroupedWindowFunction 将窗口划分和聚合绑定在一起。</p><p>目前 Window TVF 支持 tumble window，hop window，新增了 cumulate window；session window 预计在 1.14 版本也会支持。</p><h4 id="1-2-Cumulate-Window"><a href="#1-2-Cumulate-Window" class="headerlink" title="1.2 Cumulate Window"></a>1.2 Cumulate Window</h4><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824113914700.png" alt="cumulate window"></p><p>Cumulate window 就是累计窗口，简单来说，以上图里面时间轴上的一个区间为窗口步长。</p><ul><li>第一个 window 统计的是一个区间的数据；</li><li>第二个 window 统计的是第一区间和第二个区间的数据；</li><li>第三个 window 统计的是第一区间，第二个区间和第三个区间的数据。</li></ul><p>累积计算在业务场景中非常常见，如累积 UV 场景。在 UV 大盘曲线中：我们每隔 10 分钟统计一次当天累积用户 UV。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824114137054.png" alt="近实时累计计算"></p><p>在 1.13 版本之前，当需要做这种计算时，我们一般的 SQL 写法如下：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> cumulative_UV<span class="token keyword">SELECT</span> date_str<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>time_str<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> user_id<span class="token punctuation">)</span> <span class="token keyword">as</span> UV<span class="token keyword">FROM</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span>      DATE_FORMAT<span class="token punctuation">(</span>ts<span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> date_str<span class="token punctuation">,</span>      SUBSTR<span class="token punctuation">(</span>DATE_FORMAT<span class="token punctuation">(</span>ts<span class="token punctuation">,</span><span class="token string">'HH:mm'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">'0'</span> <span class="token keyword">as</span> time_str<span class="token punctuation">,</span>      user_id  <span class="token keyword">FROM</span> user_behavior<span class="token punctuation">)</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> date_str</code></pre><p>先将每条记录所属的时间窗口字段拼接好，然后再对所有记录按照拼接好的时间窗口字段，通过 GROUP BY 做聚合，从而达到近似累积计算的效果。</p><ul><li>1.13 版本前的写法有很多缺点，首先这个聚合操作是每条记录都会计算一次。其次，在追逆数据的时候，消费堆积的数据时，UV 大盘的曲线就会跳变。</li><li>在 1.13 版本支持了 TVF 写法，基于 cumulate window，我们可以修改为下面的写法，将每条数据按照 Event Time 精确地分到每个 Window 里面, 每个窗口的计算通过 watermark 触发，即使在追数据场景中也不会跳变。</li></ul><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> cumulative_UV<span class="token keyword">SELECT</span> WINDOW_end<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> user_id<span class="token punctuation">)</span> <span class="token keyword">as</span> UV<span class="token keyword">FROM</span> <span class="token keyword">Table</span><span class="token punctuation">(</span>    CUMULATE<span class="token punctuation">(</span><span class="token keyword">Table</span> user_behavior<span class="token punctuation">,</span>DESCRIPTOR<span class="token punctuation">(</span>ts<span class="token punctuation">)</span><span class="token punctuation">,</span>INTERVAL <span class="token string">'10'</span> MINUTES<span class="token punctuation">,</span>INTERVAL <span class="token string">'1'</span> DAY<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> WINDOW_start<span class="token punctuation">,</span>WINDOW_end</code></pre><p>UV 大盘曲线效果如下图所示：</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824114419320.png" alt="UV大盘曲线效果下图所示"></p><h4 id="1-3-Window-性能优化"><a href="#1-3-Window-性能优化" class="headerlink" title="1.3 Window 性能优化"></a>1.3 Window 性能优化</h4><p>Flink 1.13 社区开发者们对 Window TVF 进行了一系列的性能优化，包括：</p><ul><li><strong>内存优化：</strong>通过内存预分配，缓存 window 的数据，通过 window watermark 触发计算，通过申请一些内存 buffer 避免高频的访问 state；</li><li><strong>切片优化：</strong>将 window 切片，尽可能复用已计算结果，如 hop window，cumulate window。计算过的分片数据无需再次计算，只需对切片的计算结果进行复用；</li><li><strong>算子优化：</strong>window 算子支持 local-global 优化；同时支持 count(distinct) 自动解热点优化；</li><li><strong>迟到数据：</strong>支持将迟到数据计算到后续分片，保证数据准确性。</li></ul><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824114505810.png" alt="Window性能优化"></p><p>基于这些优化，我们通过开源 Benchmark (Nexmark) 进行性能测试。结果显示 window 的普适性能有 2x 提升，且在 count(distinct) 场景会有更好的性能提升。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824114537906.png" alt="Window性能优化"></p><h4 id="1-4-多维数据分析"><a href="#1-4-多维数据分析" class="headerlink" title="1.4 多维数据分析"></a>1.4 多维数据分析</h4><p>语法的标准化带来了更多的灵活性和扩展性，用户可以直接在 window 窗口函数上进行多维分析。如下图所示，可以直接进行 GROUPING SETS、ROLLUP、CUBE 的分析计算。如果是在 1.13 之前的版本，我们可能需要对这些分组进行单独的 SQL 聚合，再对聚合结果做 union 操作才能达到类似的效果。而现在，类似这种多维分析的场景，可以直接在 window TVF 上支持。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824114730789.png" alt="多维数据分析"></p><h5 id="1-4-1-支持-Window-Top-N"><a href="#1-4-1-支持-Window-Top-N" class="headerlink" title="1.4.1 支持 Window Top-N"></a>1.4.1 <strong>支持 Window Top-N</strong></h5><p>除了多维分析，Window TVF 也支持 Top-N 语法，使得在 Window 上取 Top-N 的写法更加简单。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824114826337.png" alt="多维数据分析SQL"></p><h3 id="2-FLIP-162：时区和时间函数"><a href="#2-FLIP-162：时区和时间函数" class="headerlink" title="2. FLIP-162：时区和时间函数"></a>2. FLIP-162：时区和时间函数</h3><h4 id="2-1-时区问题分析"><a href="#2-1-时区问题分析" class="headerlink" title="2.1 时区问题分析"></a>2.1 时区问题分析</h4><p>大家在使用 Flink SQL 时反馈了很多时区相关的问题，造成时区问题的原因可以归纳为 3 个：</p><ul><li>PROCTIME() 函数应该考虑时区，但未考虑时区；</li><li>CURRENT_TIMESTAMP/CURRENT_TIME/CURRENT_DATE/NOW() 函数未考虑时区；</li><li>Flink 的时间属性，只支持定义在 TIMESTAMP 这种数据类型上面，这个类型是无时区的，TIMESTAMP 类型不考虑时区，但用户希望是本地时区的时间。</li></ul><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824114929478.png" alt="时区问题分析"></p><p>针对 TIMESTAMP 类型没有考虑时区的问题，我们提议通过TIMESTAMP_LTZ类型支持 (TIMESTAMP_LTZ 是 timestamp with local time zone 的缩写)。可以通过下面的表格来进行和 TIMESTAMP 的对比：</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824115024280.png" alt="时区问题分析"></p><p>TIMESTAMP_LTZ 区别于之前我们使用的 TIMESTAMP，它表示绝对时间的含义。通过对比我们可以发现：</p><ul><li>如果我们配置使用 TIMESTAMP，它可以是字符串类型的。用户不管是从英国还是中国时区来观察，这个值都是一样的；</li><li>但是对于 TIMSTAMP_TLZ 来说，它的来源就是一个 Long 值，表示从时间原点流逝过的时间。同一时刻，从时间原点流逝的时间在所有时区都是相同的，所以这个 Long 值是绝对时间的概念。当我们在不同的时区去观察这个值，我们会用本地的时区去解释成 “年-月-日-时-分-秒” 的可读格式，这就是 TIMSTAMP_TLZ 类型，TIMESTAMP_LTZ 类型也更加符合用户在不同时区下的使用习惯。</li></ul><p>下面的例子展示了 TIMESTAMP 和 TIMESTAMP_LTZ 两个类型的区别。</p><h4 id="2-2-时间函数纠正"><a href="#2-2-时间函数纠正" class="headerlink" title="2.2 时间函数纠正"></a>2.2 时间函数纠正</h4><p><strong>订正 PROCTIME() 函数</strong></p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824115208530.png" alt="时间函数纠正"></p><p>当我们有了 TIMESTAMP_LTZ 这个类型的时候，我们对 PROCTIME() 类型做了纠正：在 1.13 版本之前，它总是返回 UTC 的 TIMESTAMP；而现在，我们把返回类型变为了 TIMESTAMP_LTZ。PROCTIME 除了表示函数之外，也可以表示时间属性的标记。</p><p><strong>订正 CURRENT_TIMESTAMP/CURRENT_TIME/CURRENT_DATE/NOW() 函数</strong></p><p>这些函数在不同时区下出来的值是会发生变化的。例如在英国 UTC 时区时候是凌晨 2 点；但是如果你设置了时区是 UTC+8，时间就是在早上的 10 点。不同时区的实际时间会发生变化，效果如下图：</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824115254981.png" alt="时间函数的纠正"><strong>解决 processing time Window 时区问题</strong></p><p>大家都知道 proctime 可以表示一个时间属性，对 proctime 的 window 操作：</p><ul><li>在 1.13 版本之前，如果我们需要做按天的 window 操作，你需要手动解决时区问题，去做一些 8 小时的偏移然后再减回去；</li><li>在 FLIP-162 中我们解决了这个问题，现在用户使用的时候十分简单，只需要声明 proctime 属性，因为 PROCTIME() 函数的返回值是TIMESTAMP_LTZ，所以结果是会考虑本地的时区。下图的例子显示了在不同的时区下，proctime 属性的 window 的聚合是按照本地时区进行的。</li></ul><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824121417679.png" alt="image-20210824121417679"></p><p><strong>订正 Streaming 和 Batch 模式下函数取值方式</strong></p><p>时间函数其实在流和批上面的表现形式会有所区别，这次修正主要是让其更加符合用户实际的使用习惯。例如以下函数：</p><ul><li>在流模式中是 per-record 计算，即每条数据都计算一次；</li><li>在 Batch 模式是 query-start 计算，即在作业开始前计算一次。例如我们常用的一些 Batch 计算引擎，如 Hive 也是在每一个批开始前计算一次。</li></ul><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824121453936.png" alt="时间函数的纠正"></p><h4 id="2-3-时间类型使用"><a href="#2-3-时间类型使用" class="headerlink" title="2.3 时间类型使用"></a>2.3 时间类型使用</h4><p>在 1.13 版本也支持了在 TIMESTAMP 列上定义 Event time，也就是说Event time 现在既支持定义在 TIMESTAMP 列上，也支持定义在 TIMESTAMP_ LTZ 列上。那么作为用户，具体什么场景用什么类型呢？</p><ul><li>当作业的上游源数据包含了字符串的时间（如：2021-4-15 14:00:00）这样的场景，直接声明为 TIMESTAMP 然后把 Event time 定义在上面即可，窗口在计算的时候会基于时间字符串进行切分，最终会计算出符合你实际想要的预想结果；</li></ul><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824121528721.png" alt="时间类型的使用"></p><p>当上游数据源的打点时间属于 long 值，表示的是一个绝对时间的含义。在 1.13 版本你可以把 Event time 定义在 TIMESTAMP_LTZ 上面。此时定义在 TIMESTAMP_LTZ 类型上的各种 WINDOW 聚合，都能够自动的解决 8 小时的时区偏移问题，无需按照之前的 SQL 写法额外做时区的修改和订正。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824121559194.png" alt="时间类型使用"></p><p>小提示：Flink SQL 中关于时间函数，时区支持的这些提升，是版本不兼容的。用户在进行版本更新的时候需要留意作业逻辑中是否包含此类函数，避免升级后业务受到影响。</p><h4 id="2-4-夏令时支持"><a href="#2-4-夏令时支持" class="headerlink" title="2.4 夏令时支持"></a>2.4 夏令时支持</h4><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824121631915.png" alt="夏令时支持"></p><p>在 Flink 1.13 以前，对于国外夏令时时区的用户，做窗口相关的计算操作是十分困难的一件事，因为存在夏令时和冬令时切换的跳变。</p><p>Flink 1.13 通过支持在 TIMESTAMP_LTZ 列上定义时间属性，同时 Flink SQL 在 WINDOW 处理时巧妙地结合 TIMESTAMP 和 TIMESTAMP_LTZ 类型，优雅地支持了夏令时。这对国外夏令时时区用户，以及有海外业务场景的公司比较有用。</p><h2 id="三、重要改进解读"><a href="#三、重要改进解读" class="headerlink" title="三、重要改进解读"></a>三、重要改进解读</h2><h3 id="1-FLIP-152：提升-Hive-语法兼容性"><a href="#1-FLIP-152：提升-Hive-语法兼容性" class="headerlink" title="1. FLIP-152：提升 Hive 语法兼容性"></a>1. FLIP-152：提升 Hive 语法兼容性</h3><p>FLIP-152 主要是做了 Hive 语法的兼容性增强，支持了 Hive 的一些常用 DML 和 DQL 语法，包括：</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824121758967.png" alt="提升hive语法兼容性问题"></p><p>通过 Hive dialect 支持 Hive 常用语法。Hive 有很多的内置函数，Hive dialect 需要配合 HiveCatalog 和 Hive Module 一起使用，Hive Module 提供了 Hive 所有内置函数，加载后可以直接访问。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824121826256.png" alt="Hivedialect支持hive 常用语法"></p><p>与此同时，我们还可以通过 Hive dialect 创建/删除 Catalog 函数以及一些自定义的函数，这样使得 Flink SQL 与 Hive 的兼容性得到了极大的提升，让熟悉 Hive 的用户使用起来会更加方便。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824121903273.png" alt="删除函数"></p><h3 id="2-FLIP-163：改进-SQL-Client"><a href="#2-FLIP-163：改进-SQL-Client" class="headerlink" title="2. FLIP-163：改进 SQL Client"></a>2. FLIP-163：改进 SQL Client</h3><p>在 1.13 版本之前，大家觉得 Flink SQL Client 就是周边的一个小工具。但是，FLIP-163 在 1.13 版本进行了重要改进：</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824121932578.png" alt="改进SQL Client"></p><ol><li>通过 -i 的参数，提前把 DDL 一次性加载初始化，方便初始化表的多个 DDL 语句，不需要多次执行命令创建表，替代了之前用 yaml 文件方式创建表；</li><li>支持 -f 参数，其中 SQL 文件支持 DML（insert into）语句；</li><li>支持更多实用的配置：</li></ol><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824121955707.png" alt="SQL client配置"></p><ol><li><ul><li>通过 <strong>SET SQL-client.verbose = true</strong> , 开启 verbose，通过开启 verbose 打印整个信息，相对以前只输出一句话更加容易追踪错误信息；</li><li>通过 <strong>SET execution.runtime-mode=streaming / batch</strong> 支持设置批/流作业模式；</li><li>通过 <strong>SET pipline.name=my_Flink_job</strong> 设置作业名称；</li><li>通过 <strong>SET execution.savepoint.path=/tmp/Flink-savepoints/savepoint-bb0dab</strong> 设置作业 savepoint 路径；</li><li>对于有依赖的多个作业，通过 <strong>SET Table.dml-sync=true</strong> 去选择是否异步执行，例如离线作业，作业 a 跑完才能跑作业 b ，通过设置为 true 实现执行有依赖关系的 pipeline 调度。</li></ul></li></ol><p>4、同时支持 STATEMENT SET语法：</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824122057735.png" alt="sql client"></p><p>有可能我们的一个查询不止写到一个 sink 里面，而是需要输出到多个 sink，比如一个 sink 写到 jdbc，一个 sink 写到 HBase。</p><ul><li>在 1.13 版本之前需要启动 2 个 query 去完成这个作业；</li><li>在 1.13 版本，我们可以把这些放到一个 statement 里面，以一个作业的方式去执行，能够实现节点的复用，节约资源。</li></ul><h3 id="3-FLIP-136：增强-DataStream-和-Table-的转换"><a href="#3-FLIP-136：增强-DataStream-和-Table-的转换" class="headerlink" title="3. FLIP-136：增强 DataStream 和 Table 的转换"></a>3. FLIP-136：增强 DataStream 和 Table 的转换</h3><p>虽然 Flink SQL 大大降低了我们使用实时计算的一些使用门槛，但 Table/SQL 这种高级封装也屏蔽了一些底层实现，如 timer，state 等。不少高级用户希望能够直接操作 DataStream 获得更多的灵活性，这就需要在 Table 和 DataStream 之间进行转换。FLIP-136 增强了 Table 和 DataStream 间的转换，使得用户在两者之间的转换更加容易。</p><ul><li>支持 DataStream 和 Table 转换时传递 EVENT TIME 和 WATERMARK；</li></ul><pre class=" language-java"><code class="language-java">Table Table <span class="token operator">=</span> TableEnv<span class="token punctuation">.</span><span class="token function">fromDataStream</span><span class="token punctuation">(</span>    dataStream<span class="token punctuation">,</span>  Schema<span class="token punctuation">.</span><span class="token function">newBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">columnByMetadata</span><span class="token punctuation">(</span><span class="token string">"rowtime"</span><span class="token punctuation">,</span><span class="token string">"TIMESTMP(3)"</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">watermark</span><span class="token punctuation">(</span><span class="token string">"rowtime"</span><span class="token punctuation">,</span><span class="token string">"SOURCE_WATERMARK()"</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><ul><li>支持 Changelog 数据流在 Table 和 DataStream 间相互转换。</li></ul><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//DATASTREAM 转 Table</span>StreamTableEnvironment<span class="token punctuation">.</span><span class="token function">fromChangelogStream</span><span class="token punctuation">(</span>DataStream<span class="token operator">&lt;</span>ROW<span class="token operator">></span><span class="token punctuation">)</span><span class="token operator">:</span> TableStreamTableEnvironment<span class="token punctuation">.</span><span class="token function">fromChangelogStream</span><span class="token punctuation">(</span>DataStream<span class="token operator">&lt;</span>ROW<span class="token operator">></span><span class="token punctuation">,</span>Schema<span class="token punctuation">)</span><span class="token operator">:</span> Table<span class="token comment" spellcheck="true">//Table 转 DATASTREAM</span>StreamTableEnvironment<span class="token punctuation">.</span><span class="token function">toChangelogStream</span><span class="token punctuation">(</span>Table<span class="token punctuation">)</span><span class="token operator">:</span> DataStream<span class="token operator">&lt;</span>ROW<span class="token operator">></span>StreamTableEnvironment<span class="token punctuation">.</span><span class="token function">toChangelogStream</span><span class="token punctuation">(</span>Table<span class="token punctuation">,</span>Schema<span class="token punctuation">)</span><span class="token operator">:</span> DataStream<span class="token operator">&lt;</span>ROW<span class="token operator">></span>  </code></pre><h2 id="四、Flink-SQL-1-14-未来规划"><a href="#四、Flink-SQL-1-14-未来规划" class="headerlink" title="四、Flink SQL 1.14 未来规划"></a>四、Flink SQL 1.14 未来规划</h2><p>1.14 版本主要有以下几点规划：</p><ul><li><strong>删除 Legacy Planner</strong>：从 Flink 1.9 开始，在阿里贡献了 Blink-Planner 之后，很多一些新的 Feature 已经基于此 Blink Planner 进行开发，以前旧的 Legacy Planner 会彻底删除；</li><li><strong>完善 Window TVF</strong>：支持 session window，支持 window TVF 的 allow -lateness 等；</li><li><strong>提升 Schema Handling</strong>：全链路的 Schema 处理能力以及关键校验的提升；</li><li><strong>增强 Flink CDC 支持</strong>：增强对上游 CDC 系统的集成能力，Flink SQL 内更多的算子支持 CDC 数据流。</li></ul><h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><p>本文详细解读了 Flink SQL 1.13 的核心功能和重要改进。</p><ul><li>支持 Window TVF；</li><li>系统地解决时区和时间函数问题；</li><li>提升 Hive 和 Flink 的兼容性；</li><li>改进 SQL Client；</li><li>增强 DataStream 和 Table 的转换。</li></ul><p>同时还分享了社区关于 Flink SQL 1.14 的未来规划，相信看完文章的同学可以对 Flink SQL 在这个版本中的变化有更多的了解，在实践过程中大家可以多多关注这些新的改动和变化，感受它们所带来的业务层面上的便捷。</p>]]></content>
      
      
      <categories>
          
          <category> Flink流式引擎 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flink流式引擎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ApacheFlink实战教程CEP实战</title>
      <link href="/2021/08/24/ApacheFlink%E5%AE%9E%E6%88%98%E6%95%99%E7%A8%8BCEP%E5%AE%9E%E6%88%98/"/>
      <url>/2021/08/24/ApacheFlink%E5%AE%9E%E6%88%98%E6%95%99%E7%A8%8BCEP%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h1 id="ApacheFlink实战教程CEP实战"><a href="#ApacheFlink实战教程CEP实战" class="headerlink" title="ApacheFlink实战教程CEP实战"></a>ApacheFlink实战教程CEP实战</h1><ol><li>Flink CEP 概念以及使用场景。</li><li>如何使用 Flink CEP。</li><li>如何扩展 Flink CEP。</li></ol><h2 id="Flink-CEP-概念以及使用场景"><a href="#Flink-CEP-概念以及使用场景" class="headerlink" title="Flink CEP 概念以及使用场景"></a>Flink CEP 概念以及使用场景</h2><h3 id="1-什么是-CEP"><a href="#1-什么是-CEP" class="headerlink" title="1.什么是 CEP"></a>1.什么是 CEP</h3><p>CEP 的意思是复杂事件处理，例如：起床–&gt;洗漱–&gt;吃饭–&gt;上班等一系列串联起来的事件流形成的模式称为 CEP。如果发现某一次起床后没有刷牙洗脸亦或是吃饭就直接上班，就可以把这种非正常的事件流匹配出来进行分析，看看今天是不是起晚了。</p><p>下图中列出了几个例子：</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824104216837.png" alt="Flink CEP Example"></p><ul><li><strong>第一个是异常行为检测的例子：</strong>假设车辆维修的场景中，当一辆车出现故障时，这辆车会被送往维修点维修，然后被重新投放到市场运行。如果这辆车被投放到市场之后还未被使用就又被报障了，那么就有可能之前的维修是无效的。</li><li><strong>第二个是策略营销的例子：</strong>假设打车的场景中，用户在 APP 上规划了一个行程订单，如果这个行程在下单之后超过一定的时间还没有被司机接单的话，那么就需要将这个订单输出到下游做相关的策略调整。</li><li><strong>第三个是运维监控的例子：</strong>通常运维会监控服务器的 CPU、网络 IO 等指标超过阈值时产生相应的告警。但是在实际使用中，后台服务的重启、网络抖动等情况都会造成瞬间的流量毛刺，对非关键链路可以忽略这些毛刺而只对频繁发生的异常进行告警以减少误报。</li></ul><h3 id="2-Flink-CEP-应用场景"><a href="#2-Flink-CEP-应用场景" class="headerlink" title="2.Flink CEP 应用场景"></a>2.Flink CEP 应用场景</h3><ul><li><strong>风险控制：</strong>对用户异常行为模式进行实时检测，当一个用户发生了不该发生的行为，判定这个用户是不是有违规操作的嫌疑。</li><li><strong>策略营销：</strong>用预先定义好的规则对用户的行为轨迹进行实时跟踪，对行为轨迹匹配预定义规则的用户实时发送相应策略的推广。</li><li><strong>运维监控：</strong>灵活配置多指标、多依赖来实现更复杂的监控模式。</li></ul><h3 id="3-Flink-CEP-原理"><a href="#3-Flink-CEP-原理" class="headerlink" title="3.Flink CEP 原理"></a>3.Flink CEP 原理</h3><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824104701307.png" alt="Flink CEP原理图"></p><p>Flink CEP 内部是用 NFA（非确定有限自动机）来实现的，由点和边组成的一个状态图，以一个初始状态作为起点，经过一系列的中间状态，达到终态。点分为起始状态、中间状态、最终状态三种，边分为 take、ignore、proceed 三种。</p><ul><li><strong>take</strong>：必须存在一个条件判断，当到来的消息满足 take 边条件判断时，把这个消息放入结果集，将状态转移到下一状态。</li><li><strong>ignore</strong>：当消息到来时，可以忽略这个消息，将状态自旋在当前不变，是一个自己到自己的状态转移。</li><li><strong>proceed</strong>：又叫做状态的空转移，当前状态可以不依赖于消息到来而直接转移到下一状态。举个例子，当用户购买商品时，如果购买前有一个咨询客服的行为，需要把咨询客服行为和购买行为两个消息一起放到结果集中向下游输出；如果购买前没有咨询客服的行为，只需把购买行为放到结果集中向下游输出就可以了。 也就是说，如果有咨询客服的行为，就存在咨询客服状态的上的消息保存，如果没有咨询客服的行为，就不存在咨询客服状态的上的消息保存，咨询客服状态是由一条 proceed 边和下游的购买状态相连。</li></ul><p>下面以一个打车的例子来展示状态是如何流转的，规则见下图所示。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824105008651.png" alt="打车案例"></p><p>以乘客制定行程作为开始，匹配乘客的下单事件，如果这个订单超时还没有被司机接单的话，就把行程事件和下单事件作为结果集往下游输出。</p><p>假如消息到来顺序为：行程–&gt;其他–&gt;下单–&gt;其他。</p><p>状态流转如下：</p><p>1.开始时状态处于行程状态，即等待用户制定行程。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824105557056.png" alt="image-20210824105557056"></p><p>2.当收到行程事件时，匹配行程状态的条件，把行程事件放到结果集中，通过 take 边将状态往下转移到下单状态。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824105707540.png" alt="image-20210824105707540"></p><p>3.由于下单状态上有一条 ignore 边，所以可以忽略收到的其他事件，直到收到下单事件时将其匹配，放入结果集中，并且将当前状态往下转移到超时未接单状态。这时候结果集当中有两个事件：制定行程事件和下单事件。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824105843389.png" alt="image-20210824105843389"></p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824105851550.png" alt="image-20210824105851550"></p><p>4.超时未接单状态时，如果来了一些其他事件，同样可以被 ignore 边忽略，直到超时事件的触发，将状态往下转移到最终状态，这时候整个模式匹配成功，最终将结果集中的制定行程事件和下单事件输出到下游。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824105952153.png" alt="image-20210824105952153"></p><p>上面是一个匹配成功的例子，如果是不成功的例子会怎么样？</p><p>假如当状态处于超时未接单状态时，收到了一个接单事件，那么就不符合超时未被接单的触发条件，此时整个模式匹配失败，之前放入结果集中的行程事件和下单事件会被清理。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824110020762.png" alt="image-20210824110020762"></p><h2 id="Flink-CEP-程序开发"><a href="#Flink-CEP-程序开发" class="headerlink" title="Flink CEP 程序开发"></a>Flink CEP 程序开发</h2><p>本节将详细介绍 Flink CEP 的程序结构以及 API。</p><h3 id="1-Flink-CEP-程序结构"><a href="#1-Flink-CEP-程序结构" class="headerlink" title="1.Flink CEP 程序结构"></a>1.Flink CEP 程序结构</h3><p>主要分为两部分：定义事件模式和匹配结果处理。</p><p>官方示例如下：</p><pre class=" language-java"><code class="language-java">DataStream<span class="token operator">&lt;</span>Event<span class="token operator">></span> input <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>Pattern<span class="token operator">&lt;</span>Event<span class="token punctuation">,</span> <span class="token operator">?</span><span class="token operator">></span> pattern <span class="token operator">=</span> Pattern<span class="token punctuation">.</span>&lt;Event<span class="token operator">></span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>        <span class="token keyword">new</span> <span class="token class-name">SimpleCondition</span><span class="token operator">&lt;</span>Event<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">filter</span><span class="token punctuation">(</span>Event event<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> event<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">42</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">"middle"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subtype</span><span class="token punctuation">(</span>SubEvent<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>        <span class="token keyword">new</span> <span class="token class-name">SimpleCondition</span><span class="token operator">&lt;</span>SubEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">filter</span><span class="token punctuation">(</span>SubEvent subEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> subEvent<span class="token punctuation">.</span><span class="token function">getVolume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">10.0</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">followedBy</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>         <span class="token keyword">new</span> <span class="token class-name">SimpleCondition</span><span class="token operator">&lt;</span>Event<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">filter</span><span class="token punctuation">(</span>Event event<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> event<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>         <span class="token punctuation">}</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>PatternStream<span class="token operator">&lt;</span>Event<span class="token operator">></span> patternStream <span class="token operator">=</span> CEP<span class="token punctuation">.</span><span class="token function">pattern</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span> pattern<span class="token punctuation">)</span><span class="token punctuation">;</span>DataStream<span class="token operator">&lt;</span>Alert<span class="token operator">></span> result <span class="token operator">=</span> patternStream<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>    <span class="token keyword">new</span> <span class="token class-name">PatternProcessFunction</span><span class="token operator">&lt;</span>Event<span class="token punctuation">,</span> Alert<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">select</span><span class="token punctuation">(</span>                Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> List<span class="token operator">&lt;</span>Event<span class="token operator">>></span> pattern<span class="token punctuation">,</span>                Context ctx<span class="token punctuation">,</span>                Collector<span class="token operator">&lt;</span>Alert<span class="token operator">></span> out<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>            out<span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token function">createAlertFrom</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>程序结构分为三部分：</strong>首先需要定义一个模式(<strong>Pattern</strong>)，即第 2 行代码所示，接着把定义好的模式绑定在 DataStream 上（<strong>第 25 行</strong>），最后就可以在具有 CEP 功能的 DataStream 上将匹配的结果进行处理（<strong>第 27 行</strong>）。下面对关键部分做详细讲解：</p><ul><li><strong>定义模式：</strong>上面示例中，分为了三步，首先匹配一个 ID 为 42 的事件，接着匹配一个体积大于等于 10 的事件，最后等待收到一个 name 等于 end 的事件。</li><li><strong>匹配结果输出：</strong>此部分，需要重点注意 select 函数（第 30 行，注：本文基于 Flink 1.7 版本）里边的 Map 类型的 pattern 参数，Key 是一个 pattern 的 name，它的取值是模式定义中的 Begin 节点 start，或者是接下来 next 里面的 middle，或者是第三个步骤的 end。后面的 map 中的 value 是每一步发生的匹配事件。因在每一步中是可以使用循环属性的，可以匹配发生多次，所以 map 中的 value 是匹配发生多次的所有事件的一个集合。</li></ul><h3 id="2-Flink-CEP-构成"><a href="#2-Flink-CEP-构成" class="headerlink" title="2.Flink CEP 构成"></a>2.Flink CEP 构成</h3><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824110422728.png" alt="image-20210824110422728"></p><p>上图中，蓝色方框代表的是一个个单独的模式；浅黄色的椭圆代表的是这个模式上可以添加的属性，包括模式可以发生的循环次数，或者这个模式是贪婪的还是可选的；橘色的椭圆代表的是模式间的关系，定义了多个模式之间是怎么样串联起来的。通过定义模式，添加相应的属性，将多个模式串联起来三步，就可以构成了一个完整的 Flink CEP 程序。</p><h4 id="2-1-定义模式"><a href="#2-1-定义模式" class="headerlink" title="2.1 定义模式"></a>2.1 定义模式</h4><p>下面是示例代码：</p><pre class=" language-java"><code class="language-java">pattern<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">"start"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>        <span class="token keyword">new</span> <span class="token class-name">SimpleCondition</span><span class="token operator">&lt;</span>Event<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">filter</span><span class="token punctuation">(</span>Event event<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> event<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">42</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><p>定义模式主要有如下 5 个部分组成：</p><ul><li><strong>pattern</strong>：前一个模式</li><li><strong>next/followedBy/…</strong>：开始一个新的模式</li><li><strong>start</strong>：模式名称</li><li><strong>where</strong>：模式的内容</li><li><strong>filter</strong>：核心处理逻辑</li></ul><h4 id="2-2-模式的属性"><a href="#2-2-模式的属性" class="headerlink" title="2.2 模式的属性"></a>2.2 模式的属性</h4><p>接下来介绍一下怎样设置模式的属性。模式的属性主要分为循环属性和可选属性。</p><ul><li>循环属性可以定义模式匹配发生固定次数（<strong>times</strong>），匹配发生一次以上（<strong>oneOrMore</strong>），匹配发生多次以上(<strong>timesOrMore</strong>)。</li><li>可选属性可以设置模式是贪婪的（<strong>greedy</strong>），即匹配最长的串，或设置为可选的（<strong>optional</strong>），有则匹配，无则忽略。</li></ul><h4 id="2-3-模式的有效期"><a href="#2-3-模式的有效期" class="headerlink" title="2.3 模式的有效期"></a>2.3 模式的有效期</h4><p>由于模式的匹配事件存放在状态中进行管理，所以需要设置一个全局的有效期（within）。若不指定有效期，匹配事件会一直保存在状态中不会被清除。至于有效期能开多大，要依据具体使用场景和数据量来衡量，关键要看匹配的事件有多少，随着匹配的事件增多，新到达的消息遍历之前的匹配事件会增加 CPU、内存的消耗，并且随着状态变大，数据倾斜也会越来越严重。</p><h4 id="2-4-模式间的联系"><a href="#2-4-模式间的联系" class="headerlink" title="2.4 模式间的联系"></a>2.4 模式间的联系</h4><p>主要分为三种：严格连续性（next/notNext），宽松连续性（followedBy/notFollowedBy），和非确定宽松连续性（followedByAny）。</p><p>三种模式匹配的差别见下表所示：</p><table><thead><tr><th align="left"><strong>模式&amp;数据流</strong></th><th align="left"><strong>严格连续性</strong></th><th align="left"><strong>宽松连续性</strong></th><th align="left"><strong>非确定宽松连续性</strong></th></tr></thead><tbody><tr><td align="left">Pattern(A B) Streaming(‘a’,’c’,’b1′,’b2′)</td><td align="left">不匹配</td><td align="left">匹配 输出：a,b1</td><td align="left">匹配 输出：a,b1 a,b2</td></tr></tbody></table><p>总结如下：</p><ul><li><strong>严格连续性</strong>：需要消息的顺序到达与模式完全一致。</li><li><strong>宽松连续性</strong>：允许忽略不匹配的事件。</li><li><strong>非确定宽松连性</strong>：不仅可以忽略不匹配的事件，也可以忽略已经匹配的事件。</li></ul><h4 id="2-5-多模式组合"><a href="#2-5-多模式组合" class="headerlink" title="2.5 多模式组合"></a>2.5 多模式组合</h4><p>除了前面提到的模式定义和模式间的联系，还可以把相连的多个模式组合在一起看成一个模式组，类似于视图，可以在这个模式视图上进行相关操作。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824110937444.png" alt="image-20210824110937444"></p><p>上图这个例子里面，首先匹配了一个登录事件，然后接下来匹配浏览，下单，购买这三个事件反复发生三次的用户。</p><p>如果没有模式组的话，代码里面浏览，下单，购买要写三次。有了模式组，只需把浏览，下单，购买这三个事件当做一个模式组，把相应的属性加上 times(3) 就可以了。</p><h4 id="2-6-处理结果"><a href="#2-6-处理结果" class="headerlink" title="2.6 处理结果"></a>2.6 处理结果</h4><p>处理匹配的结果主要有四个接口：PatternFlatSelectFunction，PatternSelectFunction，PatternFlatTimeoutFunction 和 PatternTimeoutFunction。</p><p>从名字上可以看出，输出可以分为两类：select 和 flatSelect 指定输出一条还是多条，timeoutFunction 和不带 timeout 的 Function 指定可不可以对超时事件进行旁路输出。</p><p>下图是输出的综合示例代码：</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824111048098.png" alt="image-20210824111048098"></p><h4 id="2-7-状态存储优化"><a href="#2-7-状态存储优化" class="headerlink" title="2.7 状态存储优化"></a>2.7 状态存储优化</h4><p>当一个事件到来时，如果这个事件同时符合多个输出的结果集，那么这个事件是如何保存的？</p><p>Flink CEP 通过 Dewey 计数法在多个结果集中共享同一个事件副本，以实现对事件副本进行资源共享。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824111200461.png" alt="image-20210824111200461"></p><h2 id="Flink-CEP-的扩展"><a href="#Flink-CEP-的扩展" class="headerlink" title="Flink CEP 的扩展"></a>Flink CEP 的扩展</h2><p>本章主要介绍一些 Flink CEP 的扩展，讲述如何做到超时机制的精确管理，以及规则的动态加载与更新。</p><h3 id="1-超时触发机制扩展"><a href="#1-超时触发机制扩展" class="headerlink" title="1.超时触发机制扩展"></a>1.超时触发机制扩展</h3><p>原生 Flink CEP 中超时触发的功能可以通过 within+outputtag 结合来实现，但是在复杂的场景下处理存在问题，如下图所示，在下单事件后还有一个预付款事件，想要得到下单并且预付款后超时未被接单的订单，该如何表示呢？</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824111320576.png" alt="image-20210824111320576"></p><p>参照下单后超时未被接单的做法，把下单并且预付款后超时未被接单规则表示为下单**.followedBy(预付款).followedBy(接单).within(time)**，那么这样实现会存在问题吗？</p><p>这种做法的计算结果是会存在脏数据的，因为这个规则不仅匹配到了下单并且预付款后超时未被接单的订单（想要的结果），同样还匹配到了只有下单行为后超时未被接单的订单（脏数据，没有预付款）。原因是因为超时 within 是控制在整个规则上，而不是某一个状态节点上，所以不论当前的状态是处在哪个状态节点，超时后都会被旁路输出。</p><p>那么就需要考虑能否通过时间来直接对状态转移做到精确的控制，而不是通过规则超时这种曲线救国的方式。于是乎，在通过消息触发状态的转移之外，需要增加通过时间触发状态的转移支持。要实现此功能，需要在原来的状态以及状态转移中，增加时间属性的概念。如下图所示，通过 wait 算子来得到 waiting 状态，然后在 waiting 状态上设置一个十秒的时间属性以定义一个十秒的时间窗口。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824111450980.png" alt="image-20210824111450980"></p><p>wait 算子对应 NFA 中的 ignore 状态，将在没有到达时间窗口结束时间时自旋，在 ComputationState 中记录 wait 的开始时间，在 NFA 的 doProcess 中，将到来的数据与waiting 状态处理，如果到了 waiting 的结束时间，则进行状态转移。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824111558511.png" alt="image-20210824111558511"></p><p>上图中红色方框中为 waiting 状态设置了两条 ignore 边：</p><ol><li>waitingStatus.addIgnore(lastSink,waitingCondition)，waitingCondition 中的逻辑是获取当前的时间（支持事件时间），判断有没有超过设置的 waiting 阈值，如果超过就把状态向后转移。</li><li>waitingStatus.addIgnore(waitingCondition)，waitingCondition 中如果未达到设置的 waiting 阈值，就会自旋在当前的 waiting 状态不变。</li></ol><h3 id="2-规则动态注入"><a href="#2-规则动态注入" class="headerlink" title="2.规则动态注入"></a>2.规则动态注入</h3><p>线上运行的 CEP 中肯定经常遇到规则变更的情况，如果每次变更时都将任务重启、重新发布是非常不优雅的。尤其在营销或者风控这种对实时性要求比较高的场景，如果规则窗口过长（一两个星期），状态过大，就会导致重启时间延长，期间就会造成一些想要处理的异常行为不能及时发现。</p><p>那么要怎么样做到规则的动态更新和加载呢？</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824111719312.png" alt="image-20210824111719312"></p><p>梳理一下整体架构，Flink CEP 是运行在 Flink Job 里的，而规则库是放在外部存储中的。首先，需要在运行的 Job 中能及时发现外部存储中规则的变化，即需要在 Job 中提供访问外部库的能力。其次，需要将规则库中变更的规则动态加载到 CEP 中，即把外部规则的描述解析成 Flink CEP 所能识别的 pattern 结构体。最后，把生成的 pattern 转化成 NFA，替换历史 NFA，这样对新到来的消息，就会使用新的规则进行匹配。</p><p>下图就是一个支持将外部规则动态注入、更新的接口。</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824111806820.png" alt="image-20210824111806820"></p><p>这个接口里面主要实现了四个方法：</p><ul><li><strong>initialize</strong>：初始化方法，进行外部库连接的初始化。</li><li><strong>inject</strong>：和外部数据库交互的主要方法，监听外部库变化，获取最新的规则并通过 Groovy 动态加载，返回 pattern。</li><li><strong>getPeriod</strong>：设置轮巡周期，在一些比较简单的实时性要求不高的场景，可以采用轮巡的方式，定期对外部数据库进行检测。</li><li><strong>getNfaKeySelector</strong>：和动态更新无关，用来支持一个流对应多个规则组。</li></ul><h3 id="3-历史匹配结果清理"><a href="#3-历史匹配结果清理" class="headerlink" title="3.历史匹配结果清理"></a>3.历史匹配结果清理</h3><p>新规则动态加载到 Flink CEP 的 Job 中，替换掉原来的 NFA 之后，还需要对历史匹配的结果集进行清理。在 AbstractKeyedCEPPatternOperator 中实现刷新 NFA，注意，历史状态是否需要清理和业务相关：</p><ol><li>修改的逻辑对规则中事件的匹配没有影响，保留历史结果集中的状态。</li><li>修改的逻辑影响到了之前匹配的部分，需要将之前匹配的结果集中的状态数据清除，防止错误的输出。</li></ol><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824111921774.png" alt="image-20210824111921774"></p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210824111953602.png" alt="image-20210824111953602"></p><h2 id="总-结"><a href="#总-结" class="headerlink" title="总 结"></a>总 结</h2><p>使用 Flink CEP，熟知其原理是很重要的，特别是 NFA 的状态转移流程，然后再去看源码中的状态图的构建就会很清晰了。</p>]]></content>
      
      
      <categories>
          
          <category> Flink流式引擎 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flink流式引擎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>业务指标归纳</title>
      <link href="/2021/08/24/%E4%B8%9A%E5%8A%A1%E6%8C%87%E6%A0%87%E5%BD%92%E7%BA%B3/"/>
      <url>/2021/08/24/%E4%B8%9A%E5%8A%A1%E6%8C%87%E6%A0%87%E5%BD%92%E7%BA%B3/</url>
      
        <content type="html"><![CDATA[<h1 id="业务指标归纳"><a href="#业务指标归纳" class="headerlink" title="业务指标归纳"></a>业务指标归纳</h1><h2 id="ODS"><a href="#ODS" class="headerlink" title="ODS"></a>ODS</h2><h3 id="Flink-CDC-读取监听MySQL-binlog日志成广播流"><a href="#Flink-CDC-读取监听MySQL-binlog日志成广播流" class="headerlink" title="Flink CDC 读取监听MySQL binlog日志成广播流"></a>Flink CDC 读取监听MySQL binlog日志成广播流</h3><h3 id="使用定时读取数据库中，转换成对象然后就行计算-—-gt-重点"><a href="#使用定时读取数据库中，转换成对象然后就行计算-—-gt-重点" class="headerlink" title="使用定时读取数据库中，转换成对象然后就行计算  —> 重点"></a>使用定时读取数据库中，转换成对象然后就行计算  —&gt; 重点</h3><h2 id="DWM"><a href="#DWM" class="headerlink" title="DWM"></a>DWM</h2><h3 id="UV访客数"><a href="#UV访客数" class="headerlink" title="UV访客数"></a>UV访客数</h3><h3 id="用户跳出率"><a href="#用户跳出率" class="headerlink" title="用户跳出率"></a>用户跳出率</h3><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">没有上一跳(lastPageId</span> <span class="token punctuation">=</span><span class="token attr-value">= null)，没有下一跳(如何计算,下一跳的数据是没有到来的，但是如果是要是有一个sessionID的话就简单了)</span>会话窗口，是想要会话窗口去做一些近似会话的操作如果要是会话窗口，间隔时间30秒，使用全量窗口来进行计算，但是这些数据都不是一个精确的数据计算，但是这样的话会造成很多数据重复或者丢失，单纯看时间会有很多的问题，时间不是解决问题的方法这些都针对于数据来说的，主要的问题就是如何解决下一跳的问题，是多个问题，复杂事件，是多个简单事件的问题的组合，CEP应该如何去解决<span class="token attr-name">begin</span> <span class="token attr-value">解决上一跳为null</span><span class="token attr-name">within(30s)</span> <span class="token attr-value">这个跟会话窗口还是一样的问题，所以这个问题中间是需要加一些特殊条件</span>后置条件，中间还得加一些条件，就是在这30秒钟是没有数据的，后置条件的话找出的数据是什么样才能满足我们的跳出的需求next这个过滤条件应该如何去解决这个问题下一条数据只要不是上一条数据跳转过来的就行，单独的对第二条数据进行判断，不是对第一条的数据进行判断如果有watermark的话，可以处理延迟的数据，可以写同样的条件，匹配上，匹配失败，匹配超时如果匹配上了这条数据要还是不要，失败的数据是不要的，超时数据的话是需要的不会出现，在一个会话窗口中多次的跳出，在CEP中是能把这些数据给找出的CEP这个状态是需求很难，代码的话是很简单的对用户来进行分组MID进行分组CEP的编程方式都是比较固定的，还是得注重于业务</code></pre><h3 id="留存率"><a href="#留存率" class="headerlink" title="留存率"></a>留存率</h3><p>优化产品</p><h3 id="新增用户"><a href="#新增用户" class="headerlink" title="新增用户"></a>新增用户</h3><p>优化推广</p>]]></content>
      
      
      <categories>
          
          <category> 数仓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数仓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语日常学习</title>
      <link href="/2021/08/23/%E8%8B%B1%E8%AF%AD%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/08/23/%E8%8B%B1%E8%AF%AD%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="英语日常学习"><a href="#英语日常学习" class="headerlink" title="英语日常学习"></a>英语日常学习</h1><h2 id="生活最常用英语口语"><a href="#生活最常用英语口语" class="headerlink" title="生活最常用英语口语"></a>生活最常用英语口语</h2><p><a href="https://www.youtube.com/watch?v=EXMTbXdQ63Q" target="_blank" rel="noopener">https://www.youtube.com/watch?v=EXMTbXdQ63Q</a></p><pre class=" language-properties"><code class="language-properties">1、今天的天气如何<span class="token attr-name">The</span> <span class="token attr-value">Weather is very good.</span>2、今天的天气很糟糕<span class="token attr-name">The</span> <span class="token attr-value">Weather is very bad.</span>3、今天的天气如何<span class="token attr-name">How</span> <span class="token attr-value">is the weather today?</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实时数仓项目心得</title>
      <link href="/2021/08/23/%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93%E9%A1%B9%E7%9B%AE%E5%BF%83%E5%BE%97/"/>
      <url>/2021/08/23/%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93%E9%A1%B9%E7%9B%AE%E5%BF%83%E5%BE%97/</url>
      
        <content type="html"><![CDATA[<h1 id="实时数仓项目心得"><a href="#实时数仓项目心得" class="headerlink" title="实时数仓项目心得"></a>实时数仓项目心得</h1><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">其实实时数仓和离线数仓因该是一个架构两个项目,一个系统既要有实时系统也要有离线系统,周边的可能会跟一些业务系统的数据库和一些java</span> <span class="token attr-value">spring后端的数据接口等等,在大数据中,离线的一般都是hive+spark的方式来进行的</span>实时都是flink+kafka+clickhouse+hbase+redis的方式来进行的,目前的话,我是已经搭建好了实时系统和离线系统的,可能现在还有clickhouse+mysql+redis我觉得应该把这些周边的数据库,且不依赖于hadoop的数据库全部都搭建成一个单节点的一个教Dm的虚拟机中,同时我还有一个superset的一个报表系统来进行一个展示这些维度数据库中的数据结果的</code></pre><p>搭建好系统之后一定要注意快照和维护,不需要花大量的时间去解决整个环境上,应该花大量的时间在业务和解决问题的能力上面去,希望自己能够不停的做项目的同时能够锻炼自己,同时花时间能够做一个总结是非常有必要的</p><p>养成一个良好的开发习惯,就是每做一次代码的更改都得做一个版本得控制,这样方便能更好回到之前得版本和往上提高版本</p>]]></content>
      
      
      <categories>
          
          <category> 数仓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数仓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive启动问题</title>
      <link href="/2021/08/23/Hive%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98/"/>
      <url>/2021/08/23/Hive%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="Hive启动问题"><a href="#Hive启动问题" class="headerlink" title="Hive启动问题"></a>Hive启动问题</h1><h2 id="连接拒绝"><a href="#连接拒绝" class="headerlink" title="连接拒绝"></a>连接拒绝</h2><p>org.apache.hadoop.hive.metastore.api.MetaException: Could not connect to meta store using any of the URIs provided</p><p>MetaException(message:Could not connect to meta store using any of the URIs provided.</p><p>2021-08-23 15:23:55,198 INFO  [pool-9-thread-1] HiveMetaStore.audit (HiveMetaStore.java:logAuditEvent(347)) - ugi=root    ip=192.168.21.151    cmd=source:192.168.21.151 get_tables: db=@hive#default pat=.*</p><p>ugi=root    ip=unknown-ip-addr    cmd=get_multi_table : db=default tbls=</p>]]></content>
      
      
      <categories>
          
          <category> 数仓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数仓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hive高级进阶</title>
      <link href="/2021/08/23/Hive%E9%AB%98%E7%BA%A7%E8%BF%9B%E9%98%B6/"/>
      <url>/2021/08/23/Hive%E9%AB%98%E7%BA%A7%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Hive高级进阶"><a href="#Hive高级进阶" class="headerlink" title="Hive高级进阶"></a>Hive高级进阶</h1><h2 id="1-1-创建测试用表"><a href="#1-1-创建测试用表" class="headerlink" title="1.1  创建测试用表"></a>1.1  创建测试用表</h2>]]></content>
      
      
      <categories>
          
          <category> 数仓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数仓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink提交流程以及Flinkdebug流程分享</title>
      <link href="/2021/08/23/Flink%E6%8F%90%E4%BA%A4%E6%B5%81%E7%A8%8B%E4%BB%A5%E5%8F%8AFlinkdebug%E6%B5%81%E7%A8%8B%E5%88%86%E4%BA%AB/"/>
      <url>/2021/08/23/Flink%E6%8F%90%E4%BA%A4%E6%B5%81%E7%A8%8B%E4%BB%A5%E5%8F%8AFlinkdebug%E6%B5%81%E7%A8%8B%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="Flink提交流程以及Flinkdebug流程分享"><a href="#Flink提交流程以及Flinkdebug流程分享" class="headerlink" title="Flink提交流程以及Flinkdebug流程分享"></a>Flink提交流程以及Flinkdebug流程分享</h1><h2 id="Flink三种提交流程"><a href="#Flink三种提交流程" class="headerlink" title="Flink三种提交流程"></a>Flink三种提交流程</h2><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210823130021872.png" alt="Flink提交流程"></p><h2 id="为什么引入Application模式"><a href="#为什么引入Application模式" class="headerlink" title="为什么引入Application模式"></a>为什么引入Application模式</h2><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210823130250657.png" alt="三种模式"></p><p>目前我们公司使用的是PerJob模式，必须得使用接口机来进行上传，会给服务器造成很大的压力，大量的网络IO开销，我们任务是非常多的，Flink1.11之后，引入了Application模式，全部都上传到master上，可以把jar指定在hdfs上，减少上传和部署作业的时间</p><h2 id="Flink提交流程概览"><a href="#Flink提交流程概览" class="headerlink" title="Flink提交流程概览"></a>Flink提交流程概览</h2><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210823130937087.png" alt="Flink提交流程"></p><h2 id="Flink-Stream-sql客户端提交流程"><a href="#Flink-Stream-sql客户端提交流程" class="headerlink" title="Flink Stream sql客户端提交流程"></a>Flink Stream sql客户端提交流程</h2><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210823131345554.png" alt="Flink SQL提交流程"></p><p>Flink Stream SQL的源码不是很多，有时间的话，可以去看看</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210823132035655.png" alt="Flink SQL主类"></p><p>Flink SQL中的executor是非常重要的，Flink client提交SQL的一个流程</p><h2 id="Flink-Session-Runtime"><a href="#Flink-Session-Runtime" class="headerlink" title="Flink Session Runtime"></a>Flink Session Runtime</h2><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210823132427416.png" alt="Flink Session Runtime"></p><p>这些都是可以好好的把Flink 1.12的源码给好好阅读一下，并做好自己的笔记是非常的重要的</p><p>提交和调度，7大点调度任务，作业调度，对象不明确</p><p>Flink 提交源码可以总结成一个流程图，可以根据自己写的类图，启动集群，提交任务，任务调度都可以进行一个完整的程序</p><h2 id="Flink-Debug-流程"><a href="#Flink-Debug-流程" class="headerlink" title="Flink Debug 流程"></a>Flink Debug 流程</h2><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210823133735059.png" alt="Flink Debug流程"></p><p>多去尝试，多去打断点就好了，可以根据yarn session上面的ip 来进行查看</p>]]></content>
      
      
      <categories>
          
          <category> Flink流式引擎 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flink流式引擎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink电商实时数仓DWM层业务实现</title>
      <link href="/2021/08/23/Flink%E7%94%B5%E5%95%86%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93DWM%E5%B1%82%E4%B8%9A%E5%8A%A1%E5%AE%9E%E7%8E%B0/"/>
      <url>/2021/08/23/Flink%E7%94%B5%E5%95%86%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93DWM%E5%B1%82%E4%B8%9A%E5%8A%A1%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Flink电商实时数仓DWM层业务实现"><a href="#Flink电商实时数仓DWM层业务实现" class="headerlink" title="Flink电商实时数仓DWM层业务实现"></a>Flink电商实时数仓DWM层业务实现</h1><p>DWS是每天的聚合结果，按天做分区，DWT是一个累计的结果聚合</p><p>DWD是不考虑需求，和需求是没有关系的，DWM,DWS是需要考虑需求，日志数据的分流，业务数据的分流</p><p>实时计算指标计算：</p><p>​    1、实时的运维和资源的要求都是很高的</p><p>​    2、在公司中可能是按照主题来进行分析和计算</p><p>​    3、在离线的数仓当中是没有关键词分析的，这里的话，加入了搜索关键字主题分析</p><h2 id="第1章-DWS层与DWM层的设计"><a href="#第1章-DWS层与DWM层的设计" class="headerlink" title="第1章 DWS层与DWM层的设计"></a>第1章 DWS层与DWM层的设计</h2><table><thead><tr><th align="center"><strong>统计主题</strong></th><th align="center"><strong>需求指标</strong></th><th align="center"><strong>输出方式</strong></th><th align="center"><strong>计算来源</strong></th><th align="center"><strong>来源层级</strong></th></tr></thead><tbody><tr><td align="center">访客</td><td align="center">pv</td><td align="center">可视化大屏</td><td align="center">page_log直接可求</td><td align="center">dwd</td></tr><tr><td align="center">uv</td><td align="center">可视化大屏</td><td align="center">需要用page_log过滤去重</td><td align="center">dwm</td><td align="center"></td></tr><tr><td align="center">跳出率</td><td align="center">可视化大屏</td><td align="center">需要通过page_log行为判断</td><td align="center">dwm</td><td align="center"></td></tr><tr><td align="center">进入页面数</td><td align="center">可视化大屏</td><td align="center">需要识别开始访问标识</td><td align="center">dwd</td><td align="center"></td></tr><tr><td align="center">连续访问时长</td><td align="center">可视化大屏</td><td align="center">page_log直接可求</td><td align="center">dwd</td><td align="center"></td></tr><tr><td align="center">商品</td><td align="center">点击</td><td align="center">多维分析</td><td align="center">page_log直接可求</td><td align="center">dwd</td></tr><tr><td align="center">收藏</td><td align="center">多维分析</td><td align="center">收藏表</td><td align="center">dwd</td><td align="center"></td></tr><tr><td align="center">加入购物车</td><td align="center">多维分析</td><td align="center">购物车表</td><td align="center">dwd</td><td align="center"></td></tr><tr><td align="center">下单</td><td align="center">可视化大屏</td><td align="center">订单宽表</td><td align="center">dwm</td><td align="center"></td></tr><tr><td align="center">支付</td><td align="center">多维分析</td><td align="center">支付宽表</td><td align="center">dwm</td><td align="center"></td></tr><tr><td align="center">退款</td><td align="center">多维分析</td><td align="center">退款表</td><td align="center">dwd</td><td align="center"></td></tr><tr><td align="center">评论</td><td align="center">多维分析</td><td align="center">评论表</td><td align="center">dwd</td><td align="center"></td></tr><tr><td align="center">地区</td><td align="center">pv</td><td align="center">多维分析</td><td align="center">page_log直接可求</td><td align="center">dwd</td></tr><tr><td align="center">uv</td><td align="center">多维分析</td><td align="center">需要用page_log过滤去重</td><td align="center">dwm</td><td align="center"></td></tr><tr><td align="center">下单</td><td align="center">可视化大屏</td><td align="center">订单宽表</td><td align="center">dwm</td><td align="center"></td></tr><tr><td align="center">关键词</td><td align="center">搜索关键词</td><td align="center">可视化大屏</td><td align="center">页面访问日志 直接可求</td><td align="center">dwd</td></tr><tr><td align="center">点击商品关键词</td><td align="center">可视化大屏</td><td align="center">商品主题下单再次聚合</td><td align="center">dws</td><td align="center"></td></tr><tr><td align="center">下单商品关键词</td><td align="center">可视化大屏</td><td align="center">商品主题下单再次聚合</td><td align="center">dws</td><td align="center"></td></tr></tbody></table><ul><li><input disabled="" type="checkbox"> 访问UV计算<ul><li><input disabled="" type="checkbox"> 按用户去重，在天的基础上，安装各种维度信息来进行统计UV，DWM作为一个中间表，复用性，中心思想</li></ul></li><li><input disabled="" type="checkbox"> 跳出明细计算</li><li><input disabled="" type="checkbox"> 订单宽表</li><li><input disabled="" type="checkbox"> 支付宽表</li></ul><h2 id="第2章-DWM层-访客UV的计算"><a href="#第2章-DWM层-访客UV的计算" class="headerlink" title="第2章 DWM层-访客UV的计算"></a>第2章 DWM层-访客UV的计算</h2><h3 id="2-1-需求描述"><a href="#2-1-需求描述" class="headerlink" title="2.1 需求描述"></a>2.1 需求描述</h3><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">UV</span> <span class="token attr-value">全称是Unique Visitor，即访客数，对于实时计算中，也可以称为DAU(Daily Active User)，即每日的活跃用户数，因为实时计算中心的UV通常是指当日的访客数</span>那么如何从用户行为日志识别当日的访客：    1、识别出该用户打开的第一个页面，表示这个访客开始进入我们的应用    2、由于访客可以在一天中多次进入应用，我们需要要在一天的范围内进行去重</code></pre><h3 id="2-2-思考点"><a href="#2-2-思考点" class="headerlink" title="2.2 思考点"></a>2.2 思考点</h3><pre class=" language-properties"><code class="language-properties">使用状态编程来对多次进入的用户进行过滤，那么问题来了，状态里面存入什么才能更好的对用户进行一个过滤勒？状态如果为null，说明这个数据是新的，如果状态中存入的是时间，那么和数据中的时间进行比较就可以判断是否是重复的数据</code></pre><h3 id="2-3-如何去清空状态"><a href="#2-3-如何去清空状态" class="headerlink" title="2.3 如何去清空状态"></a>2.3 如何去清空状态</h3><pre class=" language-properties"><code class="language-properties">我们使用TTL的方式来进行清空状态昨天的状态，状态有没有关系都是没有关系，判断的时候一定要进行双重判断，否则会进行数据丢失按天去重，最少也是要保存一天的</code></pre><h3 id="2-4-两种方式的实现"><a href="#2-4-两种方式的实现" class="headerlink" title="2.4 两种方式的实现"></a>2.4 两种方式的实现</h3><pre class=" language-properties"><code class="language-properties">有的公司加入了session会话</code></pre><h3 id="2-5-测试流程"><a href="#2-5-测试流程" class="headerlink" title="2.5 测试流程"></a>2.5 测试流程</h3><pre class=" language-properties"><code class="language-properties">我们在进行测试的时候，一定得清楚数据流是如何进行处理得，如果不能清楚这个得化，是很难能够了解整个业务得，最后可以加一个测试，因为就是那个第一条和第二条都是可以加入测试的<span class="token attr-name">总之这个Flink</span> <span class="token attr-value">UV统计是流计算当中最简单的一个，因为我们只需要判断它是否是活跃或者访问的是进入页面的首页面，然后判断去重就可以直接将数据进行一个输出的操作</span><span class="token attr-name">其中设计到的kafka</span> <span class="token attr-value">topic</span><span class="token attr-name">Window</span><span class="token punctuation">:</span>    BaseLogAPP    UniqueVisitAPPLinux：<span class="token attr-name">    java</span> <span class="token attr-value">-jar gmall2020-mock-log-2020-12-18.jar</span><span class="token attr-name">    java</span> <span class="token attr-value">-jar userBehaviorLog-0.0.1-SNAPSHOT.jar</span>    dwd_page_log    dwm_unique_visit目前系统内存占比是</code></pre><h3 id="2-6-能力提升和项目问题疑问"><a href="#2-6-能力提升和项目问题疑问" class="headerlink" title="2.6 能力提升和项目问题疑问"></a>2.6 能力提升和项目问题疑问</h3><p><a href="https://ci.apache.org/projects/flink/flink-docs-release-1.13/docs/dev/datastream/fault-tolerance/state/" target="_blank" rel="noopener">https://ci.apache.org/projects/flink/flink-docs-release-1.13/docs/dev/datastream/fault-tolerance/state/</a></p><p><a href="https://ci.apache.org/projects/flink/flink-docs-release-1.13/docs/dev/datastream/fault-tolerance/custom_serialization/" target="_blank" rel="noopener">https://ci.apache.org/projects/flink/flink-docs-release-1.13/docs/dev/datastream/fault-tolerance/custom_serialization/</a></p><h4 id="2-6-1-Flink对状态清空的方法"><a href="#2-6-1-Flink对状态清空的方法" class="headerlink" title="2.6.1 Flink对状态清空的方法"></a>2.6.1 Flink对状态清空的方法</h4><ul><li>使用自动的TTL来对状态进行清空</li><li>使用定时器来对状态进行手动的清空</li></ul><h4 id="2-6-2-案例演示"><a href="#2-6-2-案例演示" class="headerlink" title="2.6.2 案例演示"></a>2.6.2 案例演示</h4><h3 id="2-7-使用到的技术点"><a href="#2-7-使用到的技术点" class="headerlink" title="2.7 使用到的技术点"></a>2.7 使用到的技术点</h3><pre class=" language-properties"><code class="language-properties">状态检查点删除检查点动态分流</code></pre><h3 id="2-8-思考"><a href="#2-8-思考" class="headerlink" title="2.8 思考"></a>2.8 思考</h3><pre class=" language-properties"><code class="language-properties">如果业务数据库不是MySQL的话，我们可以采取定时去读取的那种方式，今天把它给弄明白，然后彻底的掌握清楚</code></pre><h2 id="第3章-DWM层-跳出明细计算"><a href="#第3章-DWM层-跳出明细计算" class="headerlink" title="第3章 DWM层-跳出明细计算"></a>第3章 DWM层-跳出明细计算</h2><h3 id="3-1-需求分析与思路"><a href="#3-1-需求分析与思路" class="headerlink" title="3.1   需求分析与思路"></a>3.1   需求分析与思路</h3><h4 id="3-1-1-什么是跳出"><a href="#3-1-1-什么是跳出" class="headerlink" title="3.1.1 什么是跳出"></a>3.1.1 什么是跳出</h4><pre class=" language-properties"><code class="language-properties">跳出就是用户成功访问了网站的一个页面后就退出，不在继续访问网站的其它页面。而跳出率就是用跳出次数除以访问次数。关注跳出率，可以看出引流过来的访客是否能很快的被吸引，渠道引流过来的用户之间的质量对比，对于应用优化前后跳出率的对比也能看出优化改进的成果。</code></pre><h4 id="3-1-2-计算跳出行为的思路"><a href="#3-1-2-计算跳出行为的思路" class="headerlink" title="3.1.2 计算跳出行为的思路"></a>3.1.2 计算跳出行为的思路</h4><pre class=" language-properties"><code class="language-properties">首先要识别哪些是跳出行为，要把这些跳出的访客最后一个访问的页面识别出来。那么要抓住几个特征：<span class="token attr-name"></span> <span class="token attr-value">   该页面是用户近期访问的第一个页面</span>这个可以通过该页面是否有上一个页面（last_page_id）来判断，如果这个表示为空，就说明这是这个访客这次访问的第一个页面。<span class="token attr-name"></span> <span class="token attr-value">   首次访问之后很长一段时间（自己设定），用户没继续再有其他页面的访问。</span>这第一个特征的识别很简单，保留last_page_id为空的就可以了。但是第二个访问的判断，其实有点麻烦，首先这不是用一条数据就能得出结论的，需要组合判断，要用一条存在的数据和不存在的数据进行组合判断。而且要通过一个不存在的数据求得一条存在的数据。更麻烦的他并不是永远不存在，而是在一定时间范围内不存在。那么如何识别有一定失效的组合行为呢？最简单的办法就是Flink自带的CEP技术。这个CEP非常适合通过多条数据组合来识别某个事件。用户跳出事件，本质上就是一个条件事件加一个超时事件的组合。</code></pre><h3 id="3-2-代码实现"><a href="#3-2-代码实现" class="headerlink" title="3.2    代码实现"></a>3.2    代码实现</h3><h4 id="3-2-1-从kafka的dwd-page-log主题中读取页面日志"><a href="#3-2-1-从kafka的dwd-page-log主题中读取页面日志" class="headerlink" title="3.2.1 从kafka的dwd_page_log主题中读取页面日志"></a>3.2.1 从kafka的dwd_page_log主题中读取页面日志</h4><h4 id="3-2-2-通过Flink的CEP完成跳出判断"><a href="#3-2-2-通过Flink的CEP完成跳出判断" class="headerlink" title="3.2.2 通过Flink的CEP完成跳出判断"></a>3.2.2 通过Flink的CEP完成跳出判断</h4><h5 id="1-确认添加了CEP的依赖包"><a href="#1-确认添加了CEP的依赖包" class="headerlink" title="1)  确认添加了CEP的依赖包"></a>1)  确认添加了CEP的依赖包</h5><h5 id="2-设定时间语义为事件时间并指定数据中的ts字段为事件时间"><a href="#2-设定时间语义为事件时间并指定数据中的ts字段为事件时间" class="headerlink" title="2)  设定时间语义为事件时间并指定数据中的ts字段为事件时间"></a>2)  设定时间语义为事件时间并指定数据中的ts字段为事件时间</h5><h5 id="3-根据日志数据的mid进行分组"><a href="#3-根据日志数据的mid进行分组" class="headerlink" title="3)  根据日志数据的mid进行分组"></a>3)  根据日志数据的mid进行分组</h5><h5 id="4-配置CEP表达式"><a href="#4-配置CEP表达式" class="headerlink" title="4)  配置CEP表达式"></a>4)  配置CEP表达式</h5><h5 id="5-根据表达式筛选流"><a href="#5-根据表达式筛选流" class="headerlink" title="5)  根据表达式筛选流"></a>5)  根据表达式筛选流</h5><h5 id="6-提取命中的数据"><a href="#6-提取命中的数据" class="headerlink" title="6)  提取命中的数据"></a>6)  提取命中的数据</h5><h4 id="3-2-3-将跳出数据写回到kafka的DWM层"><a href="#3-2-3-将跳出数据写回到kafka的DWM层" class="headerlink" title="3.2.3 将跳出数据写回到kafka的DWM层"></a>3.2.3 将跳出数据写回到kafka的DWM层</h4><h4 id="3-2-4-测试"><a href="#3-2-4-测试" class="headerlink" title="3.2.4 测试"></a>3.2.4 测试</h4><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">{"common"</span><span class="token punctuation">:</span><span class="token attr-value">{"ar":"440000","ba":"vivo","ch":"web","is_new":"1","md":"vivo iqoo3","mid":"mid_11","os":"Android 11.0","uid":"23","vc":"v2.1.134"},"page":{"during_time":8488,"page_id":"search"},"ts":1608263563000}</span><span class="token attr-name">{"common"</span><span class="token punctuation">:</span><span class="token attr-value">{"ar":"440000","ba":"vivo","ch":"web","is_new":"1","md":"vivo iqoo3","mid":"mid_11","os":"Android 11.0","uid":"23","vc":"v2.1.134"},"page":{"during_time":8488,"page_id":"search"},"ts":1608263564000}</span><span class="token attr-name">{"common"</span><span class="token punctuation">:</span><span class="token attr-value">{"ar":"440000","ba":"vivo","ch":"web","is_new":"1","md":"vivo iqoo3","mid":"mid_12","os":"Android 11.0","uid":"23","vc":"v2.1.134"},"page":{"during_time":8488,"page_id":"search"},"ts":1608263564000}</span><span class="token attr-name">{"common"</span><span class="token punctuation">:</span><span class="token attr-value">{"ar":"440000","ba":"vivo","ch":"web","is_new":"1","md":"vivo iqoo3","mid":"mid_13","os":"Android 11.0","uid":"23","vc":"v2.1.134"},"page":{"during_time":8488,"page_id":"search"},"ts":1608263570000}</span><span class="token attr-name">{"common"</span><span class="token punctuation">:</span><span class="token attr-value">{"ar":"440000","ba":"vivo","ch":"web","is_new":"1","md":"vivo iqoo3","mid":"mid_13","os":"Android 11.0","uid":"23","vc":"v2.1.134"},"page":{"during_time":8488,"page_id":"search"},"ts":1608263574000}</span></code></pre><p>超时事件处理不是很难，主要是业务是比较难得，我们通过处理放到了kafka层</p><h2 id="第4章-DWM层-订单宽表"><a href="#第4章-DWM层-订单宽表" class="headerlink" title="第4章 DWM层-订单宽表"></a>第4章 DWM层-订单宽表</h2><h2 id="第5章-DWM层支付宽表（练习）"><a href="#第5章-DWM层支付宽表（练习）" class="headerlink" title="第5章 DWM层支付宽表（练习）"></a>第5章 DWM层支付宽表（练习）</h2><h2 id="第6章-总结"><a href="#第6章-总结" class="headerlink" title="第6章 总结"></a>第6章 总结</h2>]]></content>
      
      
      <categories>
          
          <category> 数仓 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数仓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔记演示</title>
      <link href="/2021/08/22/%E7%AC%94%E8%AE%B0%E6%BC%94%E7%A4%BA/"/>
      <url>/2021/08/22/%E7%AC%94%E8%AE%B0%E6%BC%94%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210822202007347.png" alt="image-20210822202007347"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL面试必刷</title>
      <link href="/2021/08/22/MySQL%E9%9D%A2%E8%AF%95%E5%BF%85%E5%88%B7/"/>
      <url>/2021/08/22/MySQL%E9%9D%A2%E8%AF%95%E5%BF%85%E5%88%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库-MySQL"><a href="#数据库-MySQL" class="headerlink" title="数据库-MySQL"></a>数据库-MySQL</h1><p><a href="https://www.mysql.com/" target="_blank" rel="noopener">https://www.mysql.com/</a></p><p><a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html" target="_blank" rel="noopener">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a></p><h2 id="1、索引的底层数据结构是B还是B-树"><a href="#1、索引的底层数据结构是B还是B-树" class="headerlink" title="1、索引的底层数据结构是B还是B+树"></a>1、索引的底层数据结构是B还是B+树</h2><ul><li>为什么要设计索引</li><li>如果是你，会如何设计索引</li><li>设计索引的时候使用什么数据结构</li><li>MySQL是如何实现的</li></ul><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">OLTP：</span> <span class="token attr-value">业务系统的支持，及时性非常高;</span>OLAP：对历史数据的分析MySQL中使用的是B+树索引，为什么要使用B+树，面试中可能会聊到树的概念官网中有B树，底层是使用的B+树？他们之间有什么区别？MySQL中除了B,B+有其它数据结构？<span class="token attr-name">Hash</span> <span class="token attr-name">存储引擎</span> <span class="token attr-value">---> 不同的数据文件在物理磁盘上的不同的组织形式</span>MySQL的存储引擎</code></pre><p>MySQL中的存储引擎</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210822175643586.png" alt="MySQL的存储引擎"></p><p>默认是使用InnoDB，Memory使用的是Hash索引</p><pre class=" language-properties"><code class="language-properties">InnoDB支持Hash索引，但是是自适应Hash，为什么要使用自适应的Hash</code></pre><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210822175834821.png" alt="索引的数据结构"></p><p>存储引擎到底是个啥，可以去存储的目录下面去查看这些文件的存储格式，不同的存储引擎的格式是不一样的</p><h2 id="2、MySQL的索引系统"><a href="#2、MySQL的索引系统" class="headerlink" title="2、MySQL的索引系统"></a>2、MySQL的索引系统</h2><pre class=" language-properties"><code class="language-properties">操作系统的支持，数据都是会放到磁盘上，但是对数据进行实际读取的时候，加载内存，然后才能读取到数据，磁盘和内存的读取的速度是不一样的硬件的延迟对应图，内存的数据很快的，需要把磁盘的数据加载到内存中，如果内存是无限大，可以全量的加载，内存的数据是不安全的，因此还是会进行持久化的操作预加载的过程，取一行记录，操作系统的一方面就是磁盘预读，局部性的原理程序有聚集趋向，时间局部性，磁盘预读，读的是某一个页的数据，页的大小和操作系统大小是有关系，一般都是4K，一般都是页的整数倍Hash表和二叉树hash，二叉树，B树，B+树，这个非常重要的，面试面的很多，得举例<span class="token attr-name">Hash</span> <span class="token attr-value">:</span><span class="token attr-name">    1、存在hash碰撞，必须要设置一个非常完美的hash算法，必须有一个</span> <span class="token attr-value">扰动函数</span>    2、hash适合等值查询，不适合范围查询红黑树、B树、B+树红黑树的数据格式：    HashMap里面的东西得结合起来</code></pre><h2 id="3、前缀索引实例说明"><a href="#3、前缀索引实例说明" class="headerlink" title="3、前缀索引实例说明"></a>3、前缀索引实例说明</h2><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">degree</span> <span class="token attr-value">度</span>磁盘块的放取，16K，是磁盘预读，</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java设计模式</title>
      <link href="/2021/08/22/java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>/2021/08/22/java%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="java设计模式"><a href="#java设计模式" class="headerlink" title="java设计模式"></a>java设计模式</h1><h2 id="1、工厂模式"><a href="#1、工厂模式" class="headerlink" title="1、工厂模式"></a>1、工厂模式</h2><h3 id="1-1-需求设计"><a href="#1-1-需求设计" class="headerlink" title="1.1 需求设计"></a>1.1 需求设计</h3><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">我们将创建一个</span> <span class="token attr-value">Shape 接口和实现 Shape 接口的实体类。下一步是定义工厂类 ShapeFactory。</span><span class="token attr-name">FactoryPatternDemo</span> <span class="token attr-value">类使用 ShapeFactory 来获取 Shape 对象。它将向 ShapeFactory 传递信息（circle / rectangle / square），以便获取它所需对象的类型。</span></code></pre><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210822165337756.png" alt="工厂模式设计"></p><h3 id="1-2-工厂设计模式的优点"><a href="#1-2-工厂设计模式的优点" class="headerlink" title="1.2 工厂设计模式的优点"></a>1.2 工厂设计模式的优点</h3><ul><li>面向接口编程，体现了面向对象的思想；</li><li>将创建对象的工作转移到了工厂类；</li></ul><h3 id="1-3-案例实现"><a href="#1-3-案例实现" class="headerlink" title="1.3 案例实现"></a>1.3 案例实现</h3><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210822170436248.png" alt="工厂类案例实现"></p><p>这些代码我都会放到github中的，有感兴趣的都可以去查阅</p><h3 id="1-4-JDK-中的工厂设计模式实例"><a href="#1-4-JDK-中的工厂设计模式实例" class="headerlink" title="1.4 JDK 中的工厂设计模式实例"></a>1.4 JDK 中的工厂设计模式实例</h3><ul><li>java.util.Calendar, ResourceBundle and NumberFormat getInstance() 使用了工厂方法模式；</li><li>valueOf() 在包装类中，如Boolean, Integer 也使用了工厂方法模式；</li></ul><h4 id="1-4-1-Calendar"><a href="#1-4-1-Calendar" class="headerlink" title="1.4.1 Calendar"></a>1.4.1 Calendar</h4><p>让我们一起来了解一下这个Calendar这个类到底是做什么的，是否能够在我们的工作当中能够用到，Java中Calendar类的常用方法</p><h5 id="1-4-1-1-获取时间"><a href="#1-4-1-1-获取时间" class="headerlink" title="1.4.1.1  获取时间"></a>1.4.1.1  获取时间</h5><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 使用默认时区和语言获得一个日历</span>    Calendar calendar <span class="token operator">=</span> Calendar<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 年月日时分秒，注意月份要从小标开始，所以取月份要+1</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>DAY_OF_WEEK<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>DAY_OF_YEAR<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 234</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>DAY_OF_WEEK_IN_MONTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 4</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"==========================================="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"年："</span> <span class="token operator">+</span> calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>YEAR<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 2021</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"月："</span> <span class="token operator">+</span> <span class="token punctuation">(</span>calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>MONTH<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 8</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"日："</span> <span class="token operator">+</span> calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>DAY_OF_MONTH<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 22</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"时:"</span> <span class="token operator">+</span> calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>HOUR_OF_DAY<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 5</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"分："</span> <span class="token operator">+</span> calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>MINUTE<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 24</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"秒："</span> <span class="token operator">+</span> calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>SECOND<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 8</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>YEAR<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>MONTH<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/"</span> <span class="token operator">+</span> calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>DAY_OF_MONTH<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span>                       <span class="token operator">+</span> calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>HOUR_OF_DAY<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>MINUTE<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> calendar<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>SECOND<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h5 id="1-4-1-2-设置时间"><a href="#1-4-1-2-设置时间" class="headerlink" title="1.4.1.2 设置时间"></a>1.4.1.2 设置时间</h5><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Calendar cal <span class="token operator">=</span> Calendar<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 如果想设置为某个日期，可以一次设置年月日时分秒，由于月份下标从0开始赋值月份要-1</span>    <span class="token comment" spellcheck="true">// cal.set(year, month, date, hourOfDay, minute, second);</span>    cal<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2018</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 或者6个字段分别进行设置，由于月份下标从0开始赋值月份要-1</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cal<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cal<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>SECOND<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cal<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>Calendar<span class="token punctuation">.</span>MONTH<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cal<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>这个是简单的时间的一些计算方式，用到的时候在进行一个查看就好了</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客维护问题</title>
      <link href="/2021/08/22/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E9%97%AE%E9%A2%98/"/>
      <url>/2021/08/22/%E5%8D%9A%E5%AE%A2%E7%BB%B4%E6%8A%A4%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="博客维护"><a href="#博客维护" class="headerlink" title="博客维护"></a>博客维护</h1><h2 id="1、解决博客上传问题"><a href="#1、解决博客上传问题" class="headerlink" title="1、解决博客上传问题"></a>1、解决博客上传问题</h2><p>有时间会上传失败的话，多尝试几次就好了，可能是网速不太好</p><h2 id="2、上传图床的问题"><a href="#2、上传图床的问题" class="headerlink" title="2、上传图床的问题"></a>2、上传图床的问题</h2><p>我选择的是gitee做为自己的图床，来进行保存图片，图片就不需要本地来进行保存了，这样很方便的就行文件的复制以及和移动</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210822163427850.png" alt="图床的准备"></p><h2 id="3、解决问题超时的问题"><a href="#3、解决问题超时的问题" class="headerlink" title="3、解决问题超时的问题"></a>3、解决问题超时的问题</h2><p>网上的资料好多都很乱，只需要更改一下下面这个就好了，特别是要注意的自己的配置</p><h1 id="这个是上传到github超时的时候给配置的"><a href="#这个是上传到github超时的时候给配置的" class="headerlink" title="这个是上传到github超时的时候给配置的"></a>这个是上传到github超时的时候给配置的</h1><p>151.101.185.194 github.global-ssl.fastly.net</p>]]></content>
      
      
      <categories>
          
          <category> 博客维护 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客维护 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink-CDC</title>
      <link href="/2021/08/20/Flink-CDC/"/>
      <url>/2021/08/20/Flink-CDC/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据采集系统-Flink-CDC"><a href="#大数据采集系统-Flink-CDC" class="headerlink" title="大数据采集系统-Flink-CDC"></a>大数据采集系统-Flink-CDC</h1><p><a href="https://ci.apache.org/projects/flink/flink-docs-release-1.13/docs/dev/table/sqlclient/" target="_blank" rel="noopener">SQL Client | Apache Flink</a></p><p><a href="https://debezium.io/documentation/reference/1.2/connectors/mysql.html#_temporal_values" target="_blank" rel="noopener">Debezium Connector for MySQL :: Debezium Documentation</a></p><h2 id="Flink-CDC官网学习记录"><a href="#Flink-CDC官网学习记录" class="headerlink" title="Flink-CDC官网学习记录"></a>Flink-CDC官网学习记录</h2><h3 id="01-Flink-SQL客户端案例"><a href="#01-Flink-SQL客户端案例" class="headerlink" title="01 Flink SQL客户端案例"></a>01 Flink SQL客户端案例</h3><p><em><strong>Flink SQL客户端创建MySQLCDC源执行对它的查询</strong></em></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 创建MySQL的表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">`</span>person<span class="token punctuation">`</span> <span class="token punctuation">(</span>  <span class="token punctuation">`</span>id<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>name<span class="token punctuation">`</span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token punctuation">`</span>age<span class="token punctuation">`</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token punctuation">`</span>id<span class="token punctuation">`</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 创建Flink SQL的表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> mysql_binlog <span class="token punctuation">(</span> id <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> name STRING<span class="token punctuation">,</span> age STRING<span class="token punctuation">)</span> <span class="token keyword">WITH</span> <span class="token punctuation">(</span> <span class="token string">'connector'</span> <span class="token operator">=</span> <span class="token string">'mysql-cdc'</span><span class="token punctuation">,</span> <span class="token string">'hostname'</span> <span class="token operator">=</span> <span class="token string">'flink01'</span><span class="token punctuation">,</span> <span class="token string">'port'</span> <span class="token operator">=</span> <span class="token string">'3306'</span><span class="token punctuation">,</span> <span class="token string">'username'</span> <span class="token operator">=</span> <span class="token string">'root'</span><span class="token punctuation">,</span> <span class="token string">'password'</span> <span class="token operator">=</span> <span class="token string">'000000'</span><span class="token punctuation">,</span> <span class="token string">'database-name'</span> <span class="token operator">=</span> <span class="token string">'flink'</span><span class="token punctuation">,</span> <span class="token string">'table-name'</span> <span class="token operator">=</span> <span class="token string">'person'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>这个是一个错误提示<br>org.apache.flink.table.api.ValidationException: Could not find any factory for identifier ‘mysql-cdc’ that implements ‘org.apache.flink.table.factories.DynamicTableFactory’ in the classpath.</p><p>这个错误是需要我们去下载一个jar，下载之后放到每一个Flink 节点中，并重新启动集群</p><p>然后又会报一个错误，需要去指定主键</p><p>[ERROR] Could not execute SQL statement. Reason:<br>org.apache.flink.table.api.ValidationException: The primary key is necessary when enable ‘Key: ‘scan.incremental.snapshot.enabled’ , default: true (fallback keys: [])’ to ‘true’</p><p>不过使用Flink SQL的方式来进行处理，类似于一个DataSet的方式，这个不是流处理的方式，所以这个还是有缺陷的</p><p>最后最终的SQL</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> mysql_binlog <span class="token punctuation">(</span> id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span> name STRING<span class="token punctuation">,</span> age STRING<span class="token punctuation">)</span> <span class="token keyword">WITH</span> <span class="token punctuation">(</span> <span class="token string">'connector'</span> <span class="token operator">=</span> <span class="token string">'mysql-cdc'</span><span class="token punctuation">,</span> <span class="token string">'hostname'</span> <span class="token operator">=</span> <span class="token string">'flink01'</span><span class="token punctuation">,</span> <span class="token string">'port'</span> <span class="token operator">=</span> <span class="token string">'3306'</span><span class="token punctuation">,</span> <span class="token string">'username'</span> <span class="token operator">=</span> <span class="token string">'root'</span><span class="token punctuation">,</span> <span class="token string">'password'</span> <span class="token operator">=</span> <span class="token string">'000000'</span><span class="token punctuation">,</span> <span class="token string">'database-name'</span> <span class="token operator">=</span> <span class="token string">'flink'</span><span class="token punctuation">,</span> <span class="token string">'table-name'</span> <span class="token operator">=</span> <span class="token string">'person'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> mysql_binlog<span class="token punctuation">;</span></code></pre><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210822162320378.png" alt="image-20210822162320378"></p><h3 id="02-Flink-CDC-DataStream-API"><a href="#02-Flink-CDC-DataStream-API" class="headerlink" title="02 Flink CDC DataStream API"></a>02 Flink CDC DataStream API</h3><h4 id="依赖准备"><a href="#依赖准备" class="headerlink" title="依赖准备"></a>依赖准备</h4><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">&lt;!--</span> <span class="token attr-value">  Flink connctor mysql 不在官网当中的，这个是进行一个额外进行一个引入的     --></span>&lt;dependency>    &lt;groupId>com.alibaba.ververica&lt;/groupId>    &lt;artifactId>flink-connector-mysql-cdc&lt;/artifactId>    &lt;version>${flink.cdc.mysql.version}&lt;/version>&lt;/dependency></code></pre><h4 id="代码编写，不过我现在使用的是一个自定义的序列化的方式"><a href="#代码编写，不过我现在使用的是一个自定义的序列化的方式" class="headerlink" title="代码编写，不过我现在使用的是一个自定义的序列化的方式"></a>代码编写，不过我现在使用的是一个自定义的序列化的方式</h4><h3 id="03-Data-Type-Mapping"><a href="#03-Data-Type-Mapping" class="headerlink" title="03 Data Type Mapping"></a>03 Data Type Mapping</h3><p><a href="https://ververica.github.io/flink-cdc-connectors/master/content/connectors/mysql-cdc.html" target="_blank" rel="noopener">MySQL CDC Connector — Flink CDC 2.0.0 documentation (ververica.github.io)</a></p><h3 id="04-改变JSON格式化"><a href="#04-改变JSON格式化" class="headerlink" title="04  改变JSON格式化"></a>04  改变JSON格式化</h3><p><a href="https://ververica.github.io/flink-cdc-connectors/master/content/formats/changelog-json.html" target="_blank" rel="noopener">Changelog JSON Format — Flink CDC 2.0.0 documentation (ververica.github.io)</a></p><h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><pre class=" language-properties"><code class="language-properties">&lt;dependency>  &lt;groupId>com.ververica&lt;/groupId>  &lt;artifactId>flink-format-changelog-json&lt;/artifactId>  &lt;version>2.0.0&lt;/version>&lt;/dependency></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- MySQL</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> mydb<span class="token punctuation">;</span><span class="token keyword">USE</span> mydb<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> products <span class="token punctuation">(</span>  id <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>  name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  description <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> products <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">101</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> products<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span><span class="token string">"scooter"</span><span class="token punctuation">,</span><span class="token string">"Small 2-wheel scooter"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span><span class="token string">"car battery"</span><span class="token punctuation">,</span><span class="token string">"12V car battery"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span><span class="token string">"12-pack drill bits"</span><span class="token punctuation">,</span>"<span class="token number">12</span><span class="token operator">-</span>pack <span class="token keyword">of</span> drill bits <span class="token keyword">with</span> sizes ranging <span class="token keyword">from</span> <span class="token comment" spellcheck="true">#40 to #3"),</span>       <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span><span class="token string">"hammer"</span><span class="token punctuation">,</span><span class="token string">"12oz carpenter's hammer"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span><span class="token string">"hammer"</span><span class="token punctuation">,</span><span class="token string">"14oz carpenter's hammer"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span><span class="token string">"hammer"</span><span class="token punctuation">,</span><span class="token string">"16oz carpenter's hammer"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span><span class="token string">"rocks"</span><span class="token punctuation">,</span><span class="token string">"box of assorted rocks"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span><span class="token string">"jacket"</span><span class="token punctuation">,</span><span class="token string">"water resistent black wind breaker"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span><span class="token string">"spare tire"</span><span class="token punctuation">,</span><span class="token string">"24 inch spare tire"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> orders <span class="token punctuation">(</span>  order_id <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>  order_date <span class="token keyword">DATETIME</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  customer_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  price <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  product_id <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  order_status <span class="token keyword">BOOLEAN</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token comment" spellcheck="true">-- Whether order has been placed</span><span class="token punctuation">)</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token operator">=</span> <span class="token number">10001</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">'2020-07-30 10:08:22'</span><span class="token punctuation">,</span> <span class="token string">'Jark'</span><span class="token punctuation">,</span> <span class="token number">50.50</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">'2020-07-30 10:11:09'</span><span class="token punctuation">,</span> <span class="token string">'Sally'</span><span class="token punctuation">,</span> <span class="token number">15.00</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">'2020-07-30 12:00:30'</span><span class="token punctuation">,</span> <span class="token string">'Edward'</span><span class="token punctuation">,</span> <span class="token number">25.25</span><span class="token punctuation">,</span> <span class="token number">106</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">------------------------------------------</span><span class="token comment" spellcheck="true">-- Flink SQL</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> products <span class="token punctuation">(</span>  id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>  name STRING<span class="token punctuation">,</span>  description STRING<span class="token punctuation">)</span> <span class="token keyword">WITH</span> <span class="token punctuation">(</span>  <span class="token string">'connector'</span> <span class="token operator">=</span> <span class="token string">'mysql-cdc'</span><span class="token punctuation">,</span>  <span class="token string">'hostname'</span> <span class="token operator">=</span> <span class="token string">'flink01'</span><span class="token punctuation">,</span>  <span class="token string">'port'</span> <span class="token operator">=</span> <span class="token string">'3306'</span><span class="token punctuation">,</span>  <span class="token string">'username'</span> <span class="token operator">=</span> <span class="token string">'root'</span><span class="token punctuation">,</span>  <span class="token string">'password'</span> <span class="token operator">=</span> <span class="token string">'000000'</span><span class="token punctuation">,</span>  <span class="token string">'database-name'</span> <span class="token operator">=</span> <span class="token string">'mydb'</span><span class="token punctuation">,</span>  <span class="token string">'table-name'</span> <span class="token operator">=</span> <span class="token string">'products'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> orders <span class="token punctuation">(</span>  order_id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>  order_date <span class="token keyword">TIMESTAMP</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  customer_name STRING<span class="token punctuation">,</span>  price <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  product_id <span class="token keyword">INT</span><span class="token punctuation">,</span>  order_status <span class="token keyword">BOOLEAN</span><span class="token punctuation">)</span> <span class="token keyword">WITH</span> <span class="token punctuation">(</span>  <span class="token string">'connector'</span> <span class="token operator">=</span> <span class="token string">'mysql-cdc'</span><span class="token punctuation">,</span>  <span class="token string">'hostname'</span> <span class="token operator">=</span> <span class="token string">'flink01'</span><span class="token punctuation">,</span>  <span class="token string">'port'</span> <span class="token operator">=</span> <span class="token string">'3306'</span><span class="token punctuation">,</span>  <span class="token string">'username'</span> <span class="token operator">=</span> <span class="token string">'root'</span><span class="token punctuation">,</span>  <span class="token string">'password'</span> <span class="token operator">=</span> <span class="token string">'000000'</span><span class="token punctuation">,</span>  <span class="token string">'database-name'</span> <span class="token operator">=</span> <span class="token string">'mydb'</span><span class="token punctuation">,</span>  <span class="token string">'table-name'</span> <span class="token operator">=</span> <span class="token string">'orders'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">------------------------------</span><span class="token comment" spellcheck="true">--MySQL</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">'2020-07-30 15:22:00'</span><span class="token punctuation">,</span> <span class="token string">'Jark'</span><span class="token punctuation">,</span> <span class="token number">29.71</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--MySQL</span><span class="token keyword">UPDATE</span> orders <span class="token keyword">SET</span> order_status <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token keyword">WHERE</span> order_id <span class="token operator">=</span> <span class="token number">10004</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--MySQL</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> orders <span class="token keyword">WHERE</span> order_id <span class="token operator">=</span> <span class="token number">10004</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-----------------------</span><span class="token comment" spellcheck="true">-- Flink SQL</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> kafka_gmv <span class="token punctuation">(</span>  day_str STRING<span class="token punctuation">,</span>  gmv <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">WITH</span> <span class="token punctuation">(</span>    <span class="token string">'connector'</span> <span class="token operator">=</span> <span class="token string">'kafka'</span><span class="token punctuation">,</span>    <span class="token string">'topic'</span> <span class="token operator">=</span> <span class="token string">'kafka_gmv'</span><span class="token punctuation">,</span>    <span class="token string">'scan.startup.mode'</span> <span class="token operator">=</span> <span class="token string">'earliest-offset'</span><span class="token punctuation">,</span>    <span class="token string">'properties.bootstrap.servers'</span> <span class="token operator">=</span> <span class="token string">'flink01:9092'</span><span class="token punctuation">,</span>    <span class="token string">'format'</span> <span class="token operator">=</span> <span class="token string">'changelog-json'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>错误：<span class="token punctuation">[</span>ERROR<span class="token punctuation">]</span> Could <span class="token operator">not</span> <span class="token keyword">execute</span> SQL statement<span class="token punctuation">.</span> Reason:org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>flink<span class="token punctuation">.</span><span class="token keyword">table</span><span class="token punctuation">.</span>api<span class="token punctuation">.</span>ValidationException: The <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token operator">is</span> necessary <span class="token keyword">when</span> <span class="token keyword">enable</span> <span class="token string">'Key: '</span>scan<span class="token punctuation">.</span>incremental<span class="token punctuation">.</span><span class="token keyword">snapshot</span><span class="token punctuation">.</span>enabled<span class="token string">' , default: true (fallback keys: [])'</span> <span class="token keyword">to</span> <span class="token string">'true'</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> kafka_gmv<span class="token keyword">SELECT</span> DATE_FORMAT<span class="token punctuation">(</span>order_date<span class="token punctuation">,</span> <span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> day_str<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span> <span class="token keyword">as</span> gmv<span class="token keyword">FROM</span> orders<span class="token keyword">WHERE</span> order_status <span class="token operator">=</span> <span class="token boolean">true</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> DATE_FORMAT<span class="token punctuation">(</span>order_date<span class="token punctuation">,</span> <span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- Consumer changelog data from Kafka, and check the result of materialized view: </span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> kafka_gmv<span class="token punctuation">;</span>kafka_gmv 消费<span class="token comment" spellcheck="true">--------------- 更新表的操作</span><span class="token comment" spellcheck="true">-- MySQL</span><span class="token keyword">UPDATE</span> orders <span class="token keyword">SET</span> order_status <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token keyword">WHERE</span> order_id <span class="token operator">=</span> <span class="token number">10001</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> orders <span class="token keyword">SET</span> order_status <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token keyword">WHERE</span> order_id <span class="token operator">=</span> <span class="token number">10002</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> orders <span class="token keyword">SET</span> order_status <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token keyword">WHERE</span> order_id <span class="token operator">=</span> <span class="token number">10003</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> orders<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token keyword">default</span><span class="token punctuation">,</span> <span class="token string">'2020-07-30 17:33:00'</span><span class="token punctuation">,</span> <span class="token string">'Timo'</span><span class="token punctuation">,</span> <span class="token number">50.00</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> orders <span class="token keyword">SET</span> price <span class="token operator">=</span> <span class="token number">40.00</span> <span class="token keyword">WHERE</span> order_id <span class="token operator">=</span> <span class="token number">10005</span><span class="token punctuation">;</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> orders <span class="token keyword">WHERE</span> order_id <span class="token operator">=</span> <span class="token number">10005</span><span class="token punctuation">;</span></code></pre><p>目前这里是有一个疑问的就是Flink SQL是不能很好的展现CDC这个功能的</p>]]></content>
      
      
      <categories>
          
          <category> 大数据采集系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据采集系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis单节点部署</title>
      <link href="/2021/08/19/Redis%E5%8D%95%E8%8A%82%E7%82%B9%E9%83%A8%E7%BD%B2/"/>
      <url>/2021/08/19/Redis%E5%8D%95%E8%8A%82%E7%82%B9%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据环境搭建-Redis单节点部署"><a href="#大数据环境搭建-Redis单节点部署" class="headerlink" title="大数据环境搭建-Redis单节点部署"></a>大数据环境搭建-Redis单节点部署</h1><h2 id="安装编译器"><a href="#安装编译器" class="headerlink" title="安装编译器"></a>安装编译器</h2><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">yum</span> <span class="token attr-value">install centos-release-scl scl-utils-build</span><span class="token attr-name">yum</span> <span class="token attr-value">install -y devtoolset-8-toolchain</span><span class="token attr-name">scl</span> <span class="token attr-value">enable devtoolset-8 bash</span></code></pre><p><img src="Redis%E5%8D%95%E8%8A%82%E7%82%B9%E9%83%A8%E7%BD%B2.assets/image-20210819193846635.png" alt="GCC 版本"></p><h2 id="安装Redis"><a href="#安装Redis" class="headerlink" title="安装Redis"></a>安装Redis</h2><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">tar</span> <span class="token attr-value">-zxvf redis-6.2.1.tar.gz -C /opt/module/</span><span class="token attr-name">cd</span> <span class="token attr-value">redis-6.2.1</span>make如果出错了的话，就执行这个，出错的原因可能就是编译器的安装没有准备好<span class="token attr-name">make</span> <span class="token attr-value">distclean  ---> 如果出错了，先执行make，然后在执行make install</span><span class="token attr-name">make</span> <span class="token attr-value">install</span>安装目录：/usr/local/bin查看默认安装目录：<span class="token attr-name">redis-benchmark</span><span class="token punctuation">:</span><span class="token attr-value">性能测试工具，可以在自己本子运行，看看自己本子性能如何</span>redis-check-aof：修复有问题的AOF文件，rdb和aof后面讲redis-check-dump：修复有问题的dump.rdb文件redis-sentinel：Redis集群使用redis-server：Redis服务器启动命令redis-cli：客户端，操作入口<span class="token attr-name">mv</span> <span class="token attr-value">redis.conf redis</span><span class="token attr-name">daemonize</span> <span class="token attr-value">no改成yes</span></code></pre><h2 id="配置文件的更改"><a href="#配置文件的更改" class="headerlink" title="配置文件的更改"></a>配置文件的更改</h2><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">daemonize</span> <span class="token attr-value">yes ---> 后台启动</span><span class="token attr-name">bind</span> <span class="token attr-value">0.0.0.0  ---> 表任何IP地址都能连接上，以前只有127.0.0.1表示主机连接</span><span class="token attr-name">protected-mode</span> <span class="token attr-value">no ---> 将也是改成no，将安全连接关闭，不然也连接不上</span><span class="token attr-name">dir</span> <span class="token attr-value">/opt/module/redis/db</span><span class="token attr-name">dbfilename</span> <span class="token attr-value">wmy.rdb</span><span class="token attr-name">pidfile</span> <span class="token attr-value">/opt/module/redis/redis_6379.pid</span>查看是否关闭防火墙<span class="token attr-name">systemctl</span> <span class="token attr-value">status firewalld</span><span class="token attr-name">systemctl</span> <span class="token attr-value">stop firewalld.service</span><span class="token attr-name">redis-server</span> <span class="token attr-value">/opt/module/redis/redis.conf</span><span class="token attr-name">ps</span> <span class="token attr-value">-ef | grep redis</span><span class="token attr-name">redis-cli</span> <span class="token attr-value">-h flink01</span><span class="token attr-name">redis-cli</span> <span class="token attr-value">shutdown</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 大数据环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Clickhouse分布式部署</title>
      <link href="/2021/08/19/Clickhouse%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/"/>
      <url>/2021/08/19/Clickhouse%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据环境搭建-Clickhouse分布式部署"><a href="#大数据环境搭建-Clickhouse分布式部署" class="headerlink" title="大数据环境搭建-Clickhouse分布式部署"></a>大数据环境搭建-Clickhouse分布式部署</h1><h2 id="所需要的文件"><a href="#所需要的文件" class="headerlink" title="所需要的文件"></a>所需要的文件</h2><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">-rw-r--r--.</span> <span class="token attr-value">1 root root     78074 8月  19 19:29 clickhouse-client-21.7.3.14-2.noarch.rpm</span><span class="token attr-name">-rw-r--r--.</span> <span class="token attr-value">1 root root 174283244 8月  19 19:29 clickhouse-common-static-21.7.3.14-2.x86_64.rpm</span><span class="token attr-name">-rw-r--r--.</span> <span class="token attr-value">1 root root 786208040 8月  19 19:29 clickhouse-common-static-dbg-21.7.3.14-2.x86_64.rpm</span><span class="token attr-name">-rw-r--r--.</span> <span class="token attr-value">1 root root    101969 8月  19 19:29 clickhouse-server-21.7.3.14-2.noarch.rpm</span></code></pre><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">sudo</span> <span class="token attr-value">rpm -ivh *.rpm</span>修改配置文件&lt;listen_host>0.0.0.0&lt;/listen_host><span class="token attr-name">sudo</span> <span class="token attr-value">systemctl start clickhouse-server</span><span class="token attr-name">ps</span> <span class="token attr-value">-ef | grep clickhouse</span><span class="token attr-name">clickhouse-client</span> <span class="token attr-value">-h flink01</span></code></pre><h2 id="启动集群"><a href="#启动集群" class="headerlink" title="启动集群"></a>启动集群</h2><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">systemctl</span> <span class="token attr-value">start clickhouse-server</span><span class="token attr-name">systemctl</span> <span class="token attr-value">stop clickhouse-server</span><span class="token attr-name">clickhouse-client</span> <span class="token attr-value">-h flink01</span></code></pre><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">[root@localhost</span> <span class="token attr-value">~]# rpm -qa |grep clickhouse</span><span class="token attr-name">rpm</span> <span class="token attr-value">-e    --nodeps</span> 删除数据目录：<span class="token attr-name">rm</span> <span class="token attr-value"> -rf   /var/lib/clickhouse</span> 删除集群配置文件<span class="token attr-name">rm</span> <span class="token attr-value">-rf /etc/metrika.xml</span> 删除配置文件<span class="token attr-name">rm</span> <span class="token attr-value">-rf  /etc/clickhouse-*</span> 删除日志文件<span class="token attr-name">rm</span> <span class="token attr-value">-rf  /var/log/clickhouse-server</span> 删除zookeeper上clickhouse的数据<span class="token attr-name">rm</span> <span class="token attr-value">  /clickhouse</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 大数据环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HBASE2.0.5分布式部署</title>
      <link href="/2021/08/18/HBASE2-0-5%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/"/>
      <url>/2021/08/18/HBASE2-0-5%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据环境搭建-HBASE2-0-5分布式部署"><a href="#大数据环境搭建-HBASE2-0-5分布式部署" class="headerlink" title="大数据环境搭建-HBASE2.0.5分布式部署"></a>大数据环境搭建-HBASE2.0.5分布式部署</h1><h2 id="hbase-env-sh"><a href="#hbase-env-sh" class="headerlink" title="hbase-env.sh"></a>hbase-env.sh</h2><pre class=" language-xml"><code class="language-xml">export HBASE_MANAGES_ZK=false</code></pre><h2 id="hbase-site-xml"><a href="#hbase-site-xml" class="headerlink" title="hbase-site.xml"></a>hbase-site.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.rootdir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://flink01:9820/hbase<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.cluster.distributed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.zookeeper.quorum<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>flink01,flink02,flink03<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hbase.master.maxclockskew<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>180000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Time difference of regionserver from master<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><h2 id="kylin"><a href="#kylin" class="headerlink" title="kylin"></a>kylin</h2><p>这个安装很简单，只需要解压完成就好了</p><h2 id="phoenix安装"><a href="#phoenix安装" class="headerlink" title="phoenix安装"></a>phoenix安装</h2><p>安装成功了</p>]]></content>
      
      
      <categories>
          
          <category> 大数据环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spark3.0.0-hadoop3.2分布式部署</title>
      <link href="/2021/08/18/Spark3-0-0-hadoop3-2%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/"/>
      <url>/2021/08/18/Spark3-0-0-hadoop3-2%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据环境搭建-Spark3-0-0-hadoop3-2分布式部署"><a href="#大数据环境搭建-Spark3-0-0-hadoop3-2分布式部署" class="headerlink" title="大数据环境搭建-Spark3.0.0-hadoop3.2分布式部署"></a>大数据环境搭建-Spark3.0.0-hadoop3.2分布式部署</h1><h2 id="spark-env-sh"><a href="#spark-env-sh" class="headerlink" title="spark-env.sh"></a>spark-env.sh</h2><pre class=" language-shell"><code class="language-shell">SPARK_MASTER_HOST=flink01SPARK_MASTER_PORT=7077export JAVA_HOME=/opt/module/jdk1.8.0_144</code></pre><h2 id="spark-defaults-conf"><a href="#spark-defaults-conf" class="headerlink" title="spark-defaults.conf"></a>spark-defaults.conf</h2><pre class=" language-shell"><code class="language-shell">spark.master    yarnspark.eventLog.enabled    truespark.eventLog.dir    hdfs://flink01:9820/spark-historyspark.executor.memory    1gspark.driver.memory    1gspark.yarn.jars hdfs://flink01:9820/spark-jars/*</code></pre><h2 id="slaves"><a href="#slaves" class="headerlink" title="slaves"></a>slaves</h2><pre class=" language-xml"><code class="language-xml">flink01flink02flink03</code></pre><p>在这里，我只是把Spark当作了Hive的计算引擎了</p>]]></content>
      
      
      <categories>
          
          <category> 大数据环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hiveOnSpark分布式搭建</title>
      <link href="/2021/08/18/hiveOnSpark%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA/"/>
      <url>/2021/08/18/hiveOnSpark%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据环境搭建HiveOnSpark"><a href="#大数据环境搭建HiveOnSpark" class="headerlink" title="大数据环境搭建HiveOnSpark"></a>大数据环境搭建HiveOnSpark</h1><h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><pre class=" language-shell"><code class="language-shell">mv log4j-slf4j-impl-2.10.0.jar log4j-slf4j-impl-2.10.0.jar.bakmv mysql-connector-java-5.1.27-bin.jar hive-3.1.2/lib/</code></pre><h2 id="hive-site-xml"><a href="#hive-site-xml" class="headerlink" title="hive-site.xml"></a>hive-site.xml</h2><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210822162352155.png" alt="image-20210822162352155"></p><p>其实很奇怪的事情就是，我们hive把spark给当作引擎，我们可以不用启动，但是还是必须要有的，不过这个也不奇怪，毕竟在工作当中，一个平台不可能没有Spark的</p><h2 id="capacity-scheduler-xml"><a href="#capacity-scheduler-xml" class="headerlink" title="capacity-scheduler.xml"></a>capacity-scheduler.xml</h2><p>记住，这个要和hadoop配置文件中的都必须是类似的</p><pre class=" language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--     Licensed under the Apache License, Version 2.0 (the "License");you may not use this file except in compliance with the License.You may obtain a copy of the License athttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, softwaredistributed under the License is distributed on an "AS IS" BASIS,WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.See the License for the specific language governing permissions andlimitations under the License. See accompanying LICENSE file.--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.maximum-applications<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>10000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  Maximum number of applications that can be pending and running.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.maximum-am-resource-percent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  Maximum percent of resources in the cluster which can be used to run   application masters i.e. controls number of concurrent running  applications.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.resource-calculator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  The ResourceCalculator implementation to be used to compare   Resources in the scheduler.  The default i.e. DefaultResourceCalculator only uses Memory while  DominantResourceCalculator uses dominant-resource to compare   multi-dimensional resources such as Memory, CPU etc.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.queues<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>default,hive<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  The queues at the this level (root is the root queue).<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.default.capacity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>50<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Default queue target capacity.yuan 50 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.default.user-limit-factor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  Default queue user limit a percentage from 0.0 to 1.0.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.default.maximum-capacity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>100<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  The maximum capacity of the default queue. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.default.state<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>RUNNING<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  The state of the default queue. State can be one of RUNNING or STOPPED.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.default.acl_submit_applications<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  The ACL of who can submit jobs to the default queue.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.default.acl_administer_queue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  The ACL of who can administer jobs on the default queue.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.default.acl_application_max_priority<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  The ACL of who can submit applications with configured priority.  For e.g, [user={name} group={name} max_priority={priority} default_priority={priority}]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.default.maximum-application-lifetime <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>    Maximum lifetime of an application which is submitted to a queue    in seconds. Any value less than or equal to zero will be considered as    disabled.    This will be a hard time limit for all applications in this    queue. If positive value is configured then any application submitted    to this queue will be killed after exceeds the configured lifetime.    User can also specify lifetime per application basis in    application submission context. But user lifetime will be    overridden if it exceeds queue maximum lifetime. It is point-in-time    configuration.    Note : Configuring too low value will result in killing application    sooner. This feature is applicable only for leaf queue. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.default.default-application-lifetime <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>    Default lifetime of an application which is submitted to a queue    in seconds. Any value less than or equal to zero will be considered as    disabled.    If the user has not submitted application with lifetime value then this    value will be taken. It is point-in-time configuration.    Note : Default lifetime can't exceed maximum lifetime. This feature is    applicable only for leaf queue. <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.node-locality-delay<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>40<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  Number of missed scheduling opportunities after which the CapacityScheduler   attempts to schedule rack-local containers.  When setting this parameter, the size of the cluster should be taken into account.  We use 40 as the default value, which is approximately the number of nodes in one rack.  Note, if this value is -1, the locality constraint in the container request  will be ignored, which disables the delay scheduling.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.rack-locality-additional-delay<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  Number of additional missed scheduling opportunities over the node-locality-delay  ones, after which the CapacityScheduler attempts to schedule off-switch containers,  instead of rack-local ones.  Example: with node-locality-delay=40 and rack-locality-delay=20, the scheduler will  attempt rack-local assignments after 40 missed opportunities, and off-switch assignments  after 40+20=60 missed opportunities.  When setting this parameter, the size of the cluster should be taken into account.  We use -1 as the default value, which disables this feature. In this case, the number  of missed opportunities for assigning off-switch containers is calculated based on  the number of containers and unique locations specified in the resource request,  as well as the size of the cluster.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.queue-mappings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  A list of mappings that will be used to assign jobs to queues  The syntax for this list is [u|g]:[name]:[queue_name][,next mapping]*  Typically this list will be used to map users to queues,  for example, u:%user:%user maps all users to queues with the same name  as the user.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.queue-mappings-override.enable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  If a queue mapping is present, will it override the value specified  by the user? This can be used by administrators to place jobs in queues  that are different than the one specified by the user.  The default is false.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.per-node-heartbeat.maximum-offswitch-assignments<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  Controls the number of OFF_SWITCH assignments allowed  during a node's heartbeat. Increasing this value can improve  scheduling rate for OFF_SWITCH containers. Lower values reduce  "clumping" of applications on particular nodes. The default is 1.  Legal values are 1-MAX_INT. This config is refreshable.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.application.fail-fast<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  Whether RM should fail during recovery if previous applications'  queue is no longer valid.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.maximum-am-resource-percent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>0.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  集群中用于运行应用程序ApplicationMaster的资源比例上限，该参数通常用于限制处于活动状态的应用程序数目。该参数类型为浮点型，默认是0.1，表示10%。所有队列的ApplicationMaster资源比例上限可通过参数yarn.scheduler.capacity.maximum-am-resource-percent设置，而单个队列可通过参数yarn.scheduler.capacity. queue-path .maximum-am-resource-percent设置适合自己的值。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.hive.capacity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>50<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  hive队列的容量为50%<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.hive.user-limit-factor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  一个用户最多能够获取该队列资源容量的比例，取值0-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.hive.maximum-capacity<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>80<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  hive队列的最大容量（自己队列资源不够，可以使用其他队列资源上限）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.hive.state<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>RUNNING<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  开启hive队列运行，不设置队列不能使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.hive.acl_submit_applications<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  访问控制，控制谁可以将任务提交到该队列,*表示任何人<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.hive.acl_administer_queue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  访问控制，控制谁可以管理(包括提交和取消)该队列的任务，*表示任何人<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.hive.acl_application_max_priority<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  指定哪个用户可以提交配置任务优先级<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.hive.maximum-application-lifetime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  hive队列中任务的最大生命时长，以秒为单位。任何小于或等于零的值将被视为禁用。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.capacity.root.hive.default-application-lifetime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>-1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>  hive队列中任务的默认生命时长，以秒为单位。任何小于或等于零的值将被视为禁用。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><h2 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 指定NameNode的地址 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://flink01:9820<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 指定hadoop数据的存储目录 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/opt/module/hadoop-3.1.3/data<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>io.compression.codecs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>            org.apache.hadoop.io.compress.GzipCodec,            org.apache.hadoop.io.compress.DefaultCodec,            org.apache.hadoop.io.compress.BZip2Codec,            org.apache.hadoop.io.compress.SnappyCodec,            com.hadoop.compression.lzo.LzoCodec,            com.hadoop.compression.lzo.LzopCodec        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>io.compression.codec.lzo.class<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>com.hadoop.compression.lzo.LzoCodec<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><h2 id="hdfs-site-xml"><a href="#hdfs-site-xml" class="headerlink" title="hdfs-site.xml"></a>hdfs-site.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- nn web端访问地址--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.http-address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>flink01:9870<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 2nn web端访问地址--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.secondary.http-address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>flink03:9868<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 测试环境指定HDFS副本的数量1 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.replication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><h2 id="hive-site-xml-1"><a href="#hive-site-xml-1" class="headerlink" title="hive-site.xml"></a>hive-site.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span><span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionURL<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>jdbc:mysql://flink01:3306/wmyHive?useSSL=false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionDriverName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>com.mysql.jdbc.Driver<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionUserName<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>root<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>javax.jdo.option.ConnectionPassword<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>000000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.warehouse.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/user/hive/warehouse<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.schema.verification<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.server2.thrift.port<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>10000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.server2.thrift.bind.host<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>flink01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.event.db.notification.api.auth<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.cli.print.header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.cli.print.current.db<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--Spark依赖位置（注意：端口号8020必须和namenode的端口号一致）--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>spark.yarn.jars<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://flink01:9820/spark-jars/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!--Hive执行引擎--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.execution.engine<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>spark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--Hive和Spark连接超时时间--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.spark.client.connect.timeout<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>1000000ms<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hive.metastore.uris<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>thrift://flink01:9083<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><h2 id="mapred-site-xml"><a href="#mapred-site-xml" class="headerlink" title="mapred-site.xml"></a>mapred-site.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 指定MapReduce程序运行在Yarn上 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 历史服务器端地址 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.jobhistory.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>flink01:10020<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 历史服务器web端地址 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.jobhistory.webapp.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>flink01:19888<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><h2 id="spark-defaults-conf"><a href="#spark-defaults-conf" class="headerlink" title="spark-defaults.conf"></a>spark-defaults.conf</h2><pre class=" language-xml"><code class="language-xml">spark.master    yarnspark.eventLog.enabled    truespark.eventLog.dir    hdfs://flink01:9820/spark-historyspark.executor.memory    1gspark.driver.memory    1gspark.yarn.jars hdfs://flink01:9820/spark-jars/*</code></pre><h2 id="yarn-site-xml"><a href="#yarn-site-xml" class="headerlink" title="yarn-site.xml"></a>yarn-site.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 指定MR走shuffle --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 指定ResourceManager的地址--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.hostname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>flink02<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 环境变量的继承 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.env-whitelist<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- yarn容器允许分配的最大最小内存 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.minimum-allocation-mb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>512<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.maximum-allocation-mb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>4096<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- yarn容器允许管理的物理内存大小 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.resource.memory-mb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>4096<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 关闭yarn对虚拟内存的限制检查 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.vmem-check-enabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 开启日志聚集功能 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.log-aggregation-enable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 设置日志聚集服务器地址 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.log.server.url<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>http://flink01:19888/jobhistory/logs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 设置日志保留时间为7天 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.log-aggregation.retain-seconds<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>604800<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><p>如果想要看Spark是怎么安装的也可以写一篇博客来进行记录</p><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210822162412732.png" alt="image-20210822162412732"></p>]]></content>
      
      
      <categories>
          
          <category> 大数据环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hadoop3.1.3分布式环境搭建</title>
      <link href="/2021/08/18/hadoop3-1-3%E5%88%86%E5%B8%83%E5%BC%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2021/08/18/hadoop3-1-3%E5%88%86%E5%B8%83%E5%BC%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据环境搭建-hadoop3-1-3"><a href="#大数据环境搭建-hadoop3-1-3" class="headerlink" title="大数据环境搭建-hadoop3.1.3"></a>大数据环境搭建-hadoop3.1.3</h1><h2 id="集群规划"><a href="#集群规划" class="headerlink" title="集群规划"></a>集群规划</h2><table><thead><tr><th></th><th>flink01</th><th>flink02</th><th>flink03</th></tr></thead><tbody><tr><td>HDFS</td><td>NameNode | DataNode</td><td>DataNode</td><td>SecondaryNameNode | DataNode</td></tr><tr><td>YARN</td><td>NodeManager</td><td>ResourceManager | NodeManager</td><td>NodeManager</td></tr></tbody></table><h2 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 指定NameNode的地址 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>fs.defaultFS<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>hdfs://flink01:8020<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 指定hadoop数据的存储目录 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hadoop.tmp.dir<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>/opt/module/hadoop-3.1.3/data<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>io.compression.codecs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>            org.apache.hadoop.io.compress.GzipCodec,            org.apache.hadoop.io.compress.DefaultCodec,            org.apache.hadoop.io.compress.BZip2Codec,            org.apache.hadoop.io.compress.SnappyCodec,            com.hadoop.compression.lzo.LzoCodec,            com.hadoop.compression.lzo.LzopCodec        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>io.compression.codec.lzo.class<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>com.hadoop.compression.lzo.LzoCodec<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><h2 id="hdfs-site-xml"><a href="#hdfs-site-xml" class="headerlink" title="hdfs-site.xml"></a>hdfs-site.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- nn web端访问地址--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.http-address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>flink01:9870<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 2nn web端访问地址--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.namenode.secondary.http-address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>flink03:9868<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 测试环境指定HDFS副本的数量1 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>dfs.replication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><h2 id="yarn-site-xml"><a href="#yarn-site-xml" class="headerlink" title="yarn-site.xml"></a>yarn-site.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 指定MR走shuffle --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.aux-services<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>mapreduce_shuffle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 指定ResourceManager的地址--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.resourcemanager.hostname<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>flink02<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 环境变量的继承 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.env-whitelist<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- yarn容器允许分配的最大最小内存 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.minimum-allocation-mb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>512<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.scheduler.maximum-allocation-mb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>4096<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- yarn容器允许管理的物理内存大小 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.resource.memory-mb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>4096<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 关闭yarn对虚拟内存的限制检查 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.nodemanager.vmem-check-enabled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 开启日志聚集功能 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.log-aggregation-enable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 设置日志聚集服务器地址 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.log.server.url<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>http://flink01:19888/jobhistory/logs<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 设置日志保留时间为7天 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>yarn.log-aggregation.retain-seconds<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>604800<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><h2 id="mapred-site-xml"><a href="#mapred-site-xml" class="headerlink" title="mapred-site.xml"></a>mapred-site.xml</h2><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token prolog">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 指定MapReduce程序运行在Yarn上 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.framework.name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>yarn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 历史服务器端地址 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.jobhistory.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>flink01:10020<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 历史服务器web端地址 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>mapreduce.jobhistory.webapp.address<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">></span></span>flink01:19888<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre><h2 id="hadoop-env-sh-yarn-env-sh-mapred-env-sh"><a href="#hadoop-env-sh-yarn-env-sh-mapred-env-sh" class="headerlink" title="hadoop-env.sh,yarn-env.sh,mapred-env.sh"></a>hadoop-env.sh,yarn-env.sh,mapred-env.sh</h2><pre class=" language-xml"><code class="language-xml">export JAVA_HOME=/opt/flink/platform/jdk1.8.0_144</code></pre><h2 id="将start-dfs-sh，stop-dfs-sh两个文件顶部添加以下参数"><a href="#将start-dfs-sh，stop-dfs-sh两个文件顶部添加以下参数" class="headerlink" title="将start-dfs.sh，stop-dfs.sh两个文件顶部添加以下参数"></a>将start-dfs.sh，stop-dfs.sh两个文件顶部添加以下参数</h2><pre class=" language-shell"><code class="language-shell">HDFS_DATANODE_USER=rootHADOOP_SECURE_DN_USER=hdfsHDFS_NAMENODE_USER=rootHDFS_SECONDARYNAMENODE_USER=root</code></pre><h2 id="还有，start-yarn-sh，stop-yarn-sh顶部也需添加以下"><a href="#还有，start-yarn-sh，stop-yarn-sh顶部也需添加以下" class="headerlink" title="还有，start-yarn.sh，stop-yarn.sh顶部也需添加以下"></a>还有，start-yarn.sh，stop-yarn.sh顶部也需添加以下</h2><pre class=" language-shell"><code class="language-shell">YARN_RESOURCEMANAGER_USER=rootHADOOP_SECURE_DN_USER=yarnYARN_NODEMANAGER_USER=root</code></pre>]]></content>
      
      
      <categories>
          
          <category> 大数据环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>平台节点的免密登录</title>
      <link href="/2021/08/18/%E5%B9%B3%E5%8F%B0%E8%8A%82%E7%82%B9%E7%9A%84%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/"/>
      <url>/2021/08/18/%E5%B9%B3%E5%8F%B0%E8%8A%82%E7%82%B9%E7%9A%84%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据环境搭建-免密节点设置"><a href="#大数据环境搭建-免密节点设置" class="headerlink" title="大数据环境搭建-免密节点设置"></a>大数据环境搭建-免密节点设置</h1><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>免密设置的初心就是大数据节点在平台之间的传输的过程当中不会进行一个密码的输入，简化开发，其中设置和配置是非常简单的，但是需要使用一个技巧就是必须的发送所有命令到所有的会话，这样copy的次数的就会比较少</p><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">192.168.21.151</span> <span class="token attr-value">flink01</span><span class="token attr-name">192.168.21.152</span> <span class="token attr-value">flink02</span><span class="token attr-name">192.168.21.153</span> <span class="token attr-value">flink03</span><span class="token attr-name">ssh-keygen</span> <span class="token attr-value">-t rsa </span><span class="token attr-name">ssh-copy-id</span> <span class="token attr-value">flink01</span><span class="token attr-name">ssh-copy-id</span> <span class="token attr-value">flink02</span><span class="token attr-name">ssh-copy-id</span> <span class="token attr-value">flink03</span></code></pre><p>这样就可以搭建成功了</p>]]></content>
      
      
      <categories>
          
          <category> 大数据环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JDK1.8分布式环境搭建</title>
      <link href="/2021/08/18/JDK1-8%E5%88%86%E5%B8%83%E5%BC%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2021/08/18/JDK1-8%E5%88%86%E5%B8%83%E5%BC%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据环境搭建-JDK环境搭建"><a href="#大数据环境搭建-JDK环境搭建" class="headerlink" title="大数据环境搭建-JDK环境搭建"></a>大数据环境搭建-JDK环境搭建</h1><h2 id="前提准备"><a href="#前提准备" class="headerlink" title="前提准备"></a>前提准备</h2><p>大数据平台环境搭建基本的原理都是一个类似的操作</p><h2 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h2><p>jdk-8u144-linux-x64.tar.gz</p><h2 id="安装所需要的命令和步骤"><a href="#安装所需要的命令和步骤" class="headerlink" title="安装所需要的命令和步骤"></a>安装所需要的命令和步骤</h2><p>这个的话只需要进行一个解压操作就好了</p><h2 id="测试安装是否成功"><a href="#测试安装是否成功" class="headerlink" title="测试安装是否成功"></a>测试安装是否成功</h2><p>java</p><p>javac</p><p>java -version</p>]]></content>
      
      
      <categories>
          
          <category> 大数据环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据组件Shell脚本</title>
      <link href="/2021/08/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%BB%84%E4%BB%B6Shell%E8%84%9A%E6%9C%AC/"/>
      <url>/2021/08/18/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%BB%84%E4%BB%B6Shell%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h2 id="大数据平台组件的命令"><a href="#大数据平台组件的命令" class="headerlink" title="大数据平台组件的命令"></a>大数据平台组件的命令</h2><h2 id="查看进程脚本"><a href="#查看进程脚本" class="headerlink" title="查看进程脚本"></a>查看进程脚本</h2><pre class=" language-shell"><code class="language-shell">#!/bin/bashfor i in flink01 flink02 flink02do   echo "====================== $i JPS ======================="   ssh $i /opt/module/jdk1.8.0_144/bin/jpsdone</code></pre><h2 id="传输文件"><a href="#传输文件" class="headerlink" title="传输文件"></a>传输文件</h2><p>yum -y install rsync，记住这个话必须得先安装这个，要不然得就会报错。。。</p><pre class=" language-shell"><code class="language-shell">#!/bin/bash#1. 判断参数个数if [ $# -lt 1 ]then  echo Not Enough Arguement!  exit;fi#2. 遍历集群所有机器for host in flink01 flink02 flink03do  echo ====================  $host  ====================  #3. 遍历所有目录，挨个发送  for file in $@  do    #4 判断文件是否存在    if [ -e $file ]    then      #5. 获取父目录      pdir=$(cd -P $(dirname $file); pwd)      #6. 获取当前文件的名称      fname=$(basename $file)      ssh $host "mkdir -p $pdir"      rsync -av $pdir/$fname $host:$pdir    else      echo $file does not exists!    fi  donedone</code></pre><h2 id="查看kafka-topic个数"><a href="#查看kafka-topic个数" class="headerlink" title="查看kafka topic个数"></a>查看kafka topic个数</h2><pre class=" language-shell"><code class="language-shell">/opt/module/kafka_2.11-2.4.1/bin/kafka-topics.sh --zookeeper flink01:2181/kafka --list</code></pre><h2 id="启动kafka"><a href="#启动kafka" class="headerlink" title="启动kafka"></a>启动kafka</h2><pre class=" language-properties"><code class="language-properties"><span class="token comment" spellcheck="true">#! /bin/bash</span><span class="token attr-name">case</span> <span class="token attr-value">$1 in</span>"start"){<span class="token attr-name">    for</span> <span class="token attr-value">i in flink01 flink02 flink03</span>    do<span class="token attr-name">        echo</span> <span class="token attr-value">"------------------- kafka $i -------------------"</span><span class="token attr-name">        ssh</span> <span class="token attr-value">$i "/opt/module/kafka_2.11-2.4.1/bin/kafka-server-start.sh -daemon /opt/module/kafka_2.11-2.4.1/config/server.properties"</span>    done};;"stop"){<span class="token attr-name">        for</span> <span class="token attr-value">i in flink01 flink02 flink03</span>        do<span class="token attr-name">                echo</span> <span class="token attr-value">"------------------- kafka $i -------------------"</span><span class="token attr-name">                ssh</span> <span class="token attr-value">$i "/opt/module/kafka_2.11-2.4.1/bin/kafka-server-stop.sh"</span>        done};;esac</code></pre><p>注意，这里有一个问题就是我们启动Kafka的时候使用这个是启动不起来的，但是可以使用单台进行一个启动操作</p><h2 id="创建topic"><a href="#创建topic" class="headerlink" title="创建topic"></a>创建topic</h2><pre class=" language-properties"><code class="language-properties"><span class="token attr-name">/opt/module/kafka_2.11-2.4.1/bin/kafka-topics.sh</span> <span class="token attr-value">--zookeeper flink01:2181,flink02:2181,flink03:2181/kafka  --create --replication-factor 1 --partitions 1 --topic $1</span></code></pre><h2 id="启动Flink"><a href="#启动Flink" class="headerlink" title="启动Flink"></a>启动Flink</h2><pre class=" language-shell"><code class="language-shell">#! /bin/bashcase $1 in"start"){    echo "------------------- 启动flink -------------------"    /opt/module/flink-1.13.2/bin/start-cluster.sh};;"stop"){    echo "------------------- 关闭flink -------------------"    /opt/module/flink-1.13.2/bin/stop-cluster.sh};;esac</code></pre><h2 id="启动hadoop"><a href="#启动hadoop" class="headerlink" title="启动hadoop"></a>启动hadoop</h2><pre class=" language-shell"><code class="language-shell">#!/bin/bashif [ $# -lt 1 ]then    echo "No Args Input..."    exit ;ficase $1 in"start")        echo " =================== 启动 hadoop集群 ==================="        echo " --------------- 启动 hdfs ---------------"        ssh flink01 "/opt/module/hadoop-3.1.3/sbin/start-dfs.sh"        echo " --------------- 启动 yarn ---------------"        ssh flink02 "/opt/module/hadoop-3.1.3/sbin/start-yarn.sh"        echo " --------------- 启动 historyserver ---------------"        ssh flink01 "/opt/module/hadoop-3.1.3/bin/mapred --daemon start historyserver";;"stop")        echo " =================== 关闭 hadoop集群 ==================="        echo " --------------- 关闭 historyserver ---------------"        ssh flink01 "/opt/module/hadoop-3.1.3/bin/mapred --daemon stop historyserver"        echo " --------------- 关闭 yarn ---------------"        ssh flink02 "/opt/module/hadoop-3.1.3/sbin/stop-yarn.sh"        echo " --------------- 关闭 hdfs ---------------"        ssh flink01 "/opt/module/hadoop-3.1.3/sbin/stop-dfs.sh";;*)    echo "Input Args Error...";;esac</code></pre>]]></content>
      
      
      <categories>
          
          <category> 大数据环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink1.13.2环境分布式部署</title>
      <link href="/2021/08/18/Flink1-13-2%E7%8E%AF%E5%A2%83%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/"/>
      <url>/2021/08/18/Flink1-13-2%E7%8E%AF%E5%A2%83%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="前提准备"><a href="#前提准备" class="headerlink" title="前提准备"></a>前提准备</h2><p>Flink是不依赖于任何组件的，但是它可以去集成周边的组件化，来看一下如何去搭建一个Flink-1.13.2的环境勒，这里的话，我是搭建的Flink Standalone的方式来进行一个测试操作</p><h2 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h2><p>flink1.13.2</p><h2 id="安装所需要的命令和步骤"><a href="#安装所需要的命令和步骤" class="headerlink" title="安装所需要的命令和步骤"></a>安装所需要的命令和步骤</h2><h2 id="测试安装是否成功"><a href="#测试安装是否成功" class="headerlink" title="测试安装是否成功"></a>测试安装是否成功</h2><p>使用启动命令来进行一个测试</p>]]></content>
      
      
      <categories>
          
          <category> 大数据环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kafka-2-11-2.4.1环境分布式部署</title>
      <link href="/2021/08/18/Kafka-2-11-2-4-1%E7%8E%AF%E5%A2%83%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/"/>
      <url>/2021/08/18/Kafka-2-11-2-4-1%E7%8E%AF%E5%A2%83%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据环境搭建-kafka-2-11-2-4-1"><a href="#大数据环境搭建-kafka-2-11-2-4-1" class="headerlink" title="大数据环境搭建-kafka-2.11-2.4.1"></a>大数据环境搭建-kafka-2.11-2.4.1</h1><h2 id="前提准备"><a href="#前提准备" class="headerlink" title="前提准备"></a>前提准备</h2><p>这个和以前有点区别，它是一依赖于zookeeper的，所以必须在zookeeper安装之后才能进行一个安装的处理</p><h2 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h2><p>kafka_2.11-2.4.1.tgz</p><h2 id="安装所需要的命令和步骤"><a href="#安装所需要的命令和步骤" class="headerlink" title="安装所需要的命令和步骤"></a>安装所需要的命令和步骤</h2><p>这个安装步骤很简单，但是要注意的就是必须和myid的id号一致，否则的话就会启动失败的操作</p><h2 id="测试安装是否成功"><a href="#测试安装是否成功" class="headerlink" title="测试安装是否成功"></a>测试安装是否成功</h2><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210822162430215.png" alt="image-20210822162430215"></p><p>这个测试的方便一些，搭建的过程当中一定要注意细节性的问题，如果不注意的话就会花大量的时间查找错误的，这些错误是不值得去犯错的</p>]]></content>
      
      
      <categories>
          
          <category> 大数据环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zookeeper3.5.7环境分布式部署</title>
      <link href="/2021/08/18/Zookeeper3-5-7%E7%8E%AF%E5%A2%83%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/"/>
      <url>/2021/08/18/Zookeeper3-5-7%E7%8E%AF%E5%A2%83%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据环境搭建-Zookeeper"><a href="#大数据环境搭建-Zookeeper" class="headerlink" title="大数据环境搭建-Zookeeper"></a>大数据环境搭建-Zookeeper</h1><h2 id="前提准备"><a href="#前提准备" class="headerlink" title="前提准备"></a>前提准备</h2><p>这个和之前都是一样的，首先得准备需要安装的节点的机器</p><h2 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h2><p>zookeeper-3.5.7</p><h2 id="安装所需要的命令和步骤"><a href="#安装所需要的命令和步骤" class="headerlink" title="安装所需要的命令和步骤"></a>安装所需要的命令和步骤</h2><pre class=" language-properties"><code class="language-properties">注意：必须在bin/zkEnv.sh<span class="token comment" spellcheck="true"># 如果不配置这个的话启动的时候就会报错误</span><span class="token attr-name">export</span> <span class="token attr-value">JAVA_HOME=/opt/flink/platform/jdk1.8.0_144</span><span class="token attr-name">dataDir</span><span class="token punctuation">=</span><span class="token attr-value">/opt/module/zookeeper-3.5.7/zkData</span><span class="token attr-name">server.1</span><span class="token punctuation">=</span><span class="token attr-value">flink01:2888:3888</span><span class="token attr-name">server.2</span><span class="token punctuation">=</span><span class="token attr-value">flink02:2888:3888</span><span class="token attr-name">server.3</span><span class="token punctuation">=</span><span class="token attr-value">flink03:2888:3888</span></code></pre><h2 id="测试安装是否成功"><a href="#测试安装是否成功" class="headerlink" title="测试安装是否成功"></a>测试安装是否成功</h2><p>记住，这里的话就会有一个小坑，每一次都是myid不一致导致错误的，这里和kafka哪里也要注意，否则会花大量的时间进行一个排查错误的情况</p><pre class=" language-properties"><code class="language-properties"><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> flink01 JPS <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token attr-name">2795</span> <span class="token attr-value">Jps</span><span class="token attr-name">2525</span> <span class="token attr-value">QuorumPeerMain</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> flink02 JPS <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token attr-name">2038</span> <span class="token attr-value">QuorumPeerMain</span><span class="token attr-name">2086</span> <span class="token attr-value">Jps</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> flink02 JPS <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token attr-name">2038</span> <span class="token attr-value">QuorumPeerMain</span><span class="token attr-name">2104</span> <span class="token attr-value">Jps</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 大数据环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL5.7-Linux环境下部署</title>
      <link href="/2021/08/18/MySQL5-7-Linux%E7%8E%AF%E5%A2%83%E4%B8%8B%E9%83%A8%E7%BD%B2/"/>
      <url>/2021/08/18/MySQL5-7-Linux%E7%8E%AF%E5%A2%83%E4%B8%8B%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="大数据环境搭建-MySQL环境部署"><a href="#大数据环境搭建-MySQL环境部署" class="headerlink" title="大数据环境搭建-MySQL环境部署"></a>大数据环境搭建-MySQL环境部署</h1><h2 id="前提准备"><a href="#前提准备" class="headerlink" title="前提准备"></a>前提准备</h2><p>需要一台虚拟机，能够连网，防火墙关闭，各方面正常的虚拟机就可以开始MySQL的环境搭建了</p><h2 id="软件版本"><a href="#软件版本" class="headerlink" title="软件版本"></a>软件版本</h2><p><img src="https://gitee.com/wmybigdata/blog-drawing-bed/raw/master/img/image-20210822162500471.png" alt="image-20210822162500471"></p><h2 id="安装所需要的命令和步骤如何"><a href="#安装所需要的命令和步骤如何" class="headerlink" title="安装所需要的命令和步骤如何"></a>安装所需要的命令和步骤如何</h2><pre class=" language-properties"><code class="language-properties">1、查看是都有安装过MySQL或者是默认的mariadb<span class="token attr-name">rpm</span> <span class="token attr-value">-qa | grep mysql</span><span class="token attr-name">rpm</span> <span class="token attr-value">-qa | grep mariadb</span>2、删除自带的mariadba<span class="token attr-name">rpm</span> <span class="token attr-value">-e --nodeps mariadb-libs-5.5.56-2.el7.x86_64</span>3、解压MySQL的配置<span class="token attr-name">tar</span> <span class="token attr-value">-xvf mysql-5.7.19-1.el7.x86_64.rpm-bundle.tar</span>4、安装MySQL的rpm<span class="token attr-name">rpm</span> <span class="token attr-value">-ivh --nodeps mysql-community-server-5.7.19-1.el7.x86_64.rpm</span><span class="token attr-name">rpm</span> <span class="token attr-value">-ivh --nodeps mysql-community-client-5.7.19-1.el7.x86_64.rpm</span><span class="token attr-name">rpm</span> <span class="token attr-value">-ivh mysql-community-common-5.7.19-1.el7.x86_64.rpm</span><span class="token attr-name">rpm</span> <span class="token attr-value">-ivh mysql-community-libs-5.7.19-1.el7.x86_64.rpm</span><span class="token attr-name">rpm</span> <span class="token attr-value">-ivh mysql-community-libs-compat-5.7.19-1.el7.x86_64.rpm</span>5、查看是否启动以及启动MySQL<span class="token attr-name">systemctl</span> <span class="token attr-value">status mysqld</span><span class="token attr-name">systemctl</span> <span class="token attr-value">start mysqld</span>6、查看生成的密码<span class="token attr-name">cat</span> <span class="token attr-value">/var/log/mysqld.log | grep password</span>7、第一次登录MySQL<span class="token attr-name">mysql</span> <span class="token attr-value">-uroot -p</span>注意，如果出现了密码里面有一些特殊符号的，可以回车之后在进行输入密码就可以了8、对MySQL进行配置和设置密码以及对远程连接进行一个设置的操作<span class="token attr-name">set</span> <span class="token attr-value">global validate_password_policy=0;</span><span class="token attr-name">set</span> <span class="token attr-value">global validate_password_mixed_case_count=0; </span><span class="token attr-name">set</span> <span class="token attr-value">global validate_password_number_count=3;</span><span class="token attr-name">set</span> <span class="token attr-value">global validate_password_special_char_count=0;</span><span class="token attr-name">set</span> <span class="token attr-value">global validate_password_length=3;</span><span class="token attr-name">SET</span> <span class="token attr-value">PASSWORD FOR 'root'@'localhost' = PASSWORD('000000');</span><span class="token attr-name">update</span> <span class="token attr-value">mysql.user set host = '%' where user = 'root';</span><span class="token attr-name">flush</span> <span class="token attr-value">privileges;</span>quit<span class="token attr-name">mysql</span> <span class="token attr-value">-uroot -p000000;</span></code></pre><h2 id="使用Navicat来进行链接MySQL"><a href="#使用Navicat来进行链接MySQL" class="headerlink" title="使用Navicat来进行链接MySQL"></a>使用Navicat来进行链接MySQL</h2><h2 id="开启binlog日志"><a href="#开启binlog日志" class="headerlink" title="开启binlog日志"></a>开启binlog日志</h2><pre class=" language-properties"><code class="language-properties"><span class="token comment" spellcheck="true"># binlog start</span><span class="token attr-name">server-id</span><span class="token punctuation">=</span><span class="token attr-value">1</span><span class="token attr-name">log-bin</span><span class="token punctuation">=</span><span class="token attr-value">mysql-bin</span><span class="token attr-name">binlog_format</span><span class="token punctuation">=</span><span class="token attr-value">row</span><span class="token attr-name">binlog-do-db</span><span class="token punctuation">=</span><span class="token attr-value">flink</span></code></pre><p>systemctl restart mysqld</p>]]></content>
      
      
      <categories>
          
          <category> 大数据环境搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
